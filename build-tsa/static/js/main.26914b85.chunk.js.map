{"version":3,"sources":["Widgets.js","NewStakeForm.js","StakeInfo.js","Stakes.js","Stats.js","Lobby.js","Blurb.js","Tewkenaire.js","App.js","serviceWorker.js","index.js","hex_contract.js","univ2_contract.js","hex2_contract.js","hex4_contract.js","hex5_contract.js","util.js"],"names":["debug","require","CryptoVal","props","value","v","BigNumber","isNaN","cryptoFormat","currency","s","valueString","unit","showUnit","wholeNumber","r","match","length","className","style","opacity","WhatIsThis","useState","show","setShow","target","useRef","ref","cursor","onClick","children","showPill","Badge","variant","pill","Overlay","current","rootClose","onHide","placement","flip","delay","hide","Tooltip","tooltip","BurgerHeading","src","alt","sim","params","send","options","ee","EventEmitter","count","setTimeout","emit","setInterval","JSON","stringify","VoodooButton","componentDidMount","isVoodooButton","state","data","wait","hash","object","key","val","_RESPONSE","_color","hashUI","this","contract","method","inputValid","simulate","confirmationCallback","rejectionCallback","callbackArgs","other","dataValid","handleClick","e","a","preventDefault","stopPropagation","setState","func","methods","window","web3","currentProvider","isTrust","apply","once","on","confirmationNumber","receipt","err","catch","parseInt","fontSize","_className","slice","display","Button","disabled","Spinner","as","animation","size","role","href","rel","text","icon","faCopy","React","Component","Donaticator","donateEnabled","setDonateEnabled","amount","setAmount","handleDonate","times","toString","from","fromAddress","Container","Card","Body","verticalAlign","width","margin","onCopy","name","type","readOnly","title","walletConnected","InputGroup","maxWidth","Form","Control","placeholder","htmlSize","onBlur","onChange","Append","open","GitHubInfo","MetamaskUtils","addHEXtoken","ethereum","request","address","symbol","decimals","image","console","log","addPulseChain","chainId","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","iconUrls","Row","Col","axios","create","baseURL","timeout","headers","NewStakeForm","resetForm","document","getElementById","stakeAmount","stakeDays","updateFigures","Data","currentDay","globals","LPB_MAX_DAYS","HEX","LPB","BPB_MAX_HEARTS","BPB","cappedExtraDays","longerPaysBetter","div","newStakedHearts","cappedStakedHearts","lte","biggerPaysBetter","idiv","bonusTotal","plus","effectiveHEX","shareRate","stakeShares","bigPayDay","percentGain","percentAPY","endDay","BIG_PAY_DAY","BPD_sharePool","stakeSharesTotal","bigPaySlice","calcBigPayDaySlice","adoptionBonus","calcAdoptionBonus","isZero","startDay","toPrecision","resetFormAndReloadStakes","reloadStakes","updateBarGraph","graphStartDay","Math","max","floor","numDataPoints","graphEndDay","graphIconClass","post","query","then","response","graphJSON","collated","d","stakeStarts","forEach","oRow","TShares","toNumber","index","lastStakeDays","_NEW","balance","wallet","handleDaysChange","clearTimeout","daysTimer","immediate","_startDate","Date","START_DATE","getTime","_endDate","startDate","toLocaleDateString","startTime","toLocaleTimeString","endDate","endTime","GraphCustomCursor","x","y","height","Rectangle","fill","stroke","handleCursorClick","payload","xs","sm","Group","controlId","Label","FormControl","aria-label","aria-describedby","DropdownButton","onSelect","dataset","portion","parseFloat","toFixed","Dropdown","Item","eventKey","data-portion","plusYears","years","n","now","setYear","getFullYear","Number","valueOf","plusMonths","months","setMonth","getMonth","days","data-days","backgroundColor","gt","ResponsiveContainer","BarChart","top","right","bottom","left","XAxis","dataKey","offset","position","YAxis","angle","ReferenceLine","strokeDasharray","Bar","isAnimationActive","filterNull","labelFormatter","formatter","wrapperStyle","padding","contentStyle","border","borderRadius","labelStyle","lineHeight","color","fontWeight","itemStyle","StakeInfo","esShow","esRef","createRef","stake","usdhex","progress","stakeDay","lockedDay","stakedDays","exitClass","progressVariant","shares","interest","payout","valueTotal","stakedHearts","usdValueTotal","daysServed","min","hour","minute","pending","earlyExit","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","Header","Accordion","defaultActiveKey","stakeId","bg","format","ProgressBar","striped","ceil","Collapse","Popover","Content","id","stakeIndex","stakeOwner","Stakes","unsubscribeEvents","clearSubscriptions","handleSubscriptionError","subscribeEvents","events","StakeStart","filter","stakerAddr","addToEventLog","loadAllStakes","StakeEnd","getStaticContext","publicAddress","loadingStakes","loadStakes","stakeList","totalValue","stakeData","loadStakeHistory","pastStakes","getPastEvents","fromBlock","results","map","returnValues","data0","BitSet","fromBinaryString","data1","set","timestamp","penalty","servedDays","prevUnlocked","Boolean","componentDidUpdate","prevProps","prevState","StakesList","sort","b","stakedTotal","sharesTotal","interestTotal","bigPayDayTotal","percentGainTotal","percentAPYTotal","stakeListOutput","averagePercentGain","averagePercentAPY","sortPastStakesStateByField","keyField","pastStakesSortKey","oldKey","oldDir","dir","bn_a","bn_b","lt","StakesHistory","handleSortSelection","closest","selectedCard","stakeCount","stakeContext","showExitModal","localStorage","getItem","_STAKES","location","pathname","Promise","all","handleClose","thisStake","IsEarlyExit","Toggle","class","Modal","closeButton","Title","Alert","Heading","Link","Footer","animated","label","context","allocatedSupply","dailyDataRange","call","dailyData","mapped_dailyData","padStart","day","payoutTotal","unclaimedSatoshisTotal","dailyInterestTotal","interestShare","interestBonus","CLAIM_PHASE_END_DAY","bpdStakeSharesTotal","bonuses","promises","resolve","reject","stakeLists","trunc","unlockedDay","isAutoStake","isAutoStakte","getStakePayoutData","payouts","concat","Stats","TShareRates","UNIv2usdhex","chunk","shareRateChanges","tsrData","flat","tsrMap","tsrPrevious","tsrDay","START_TIMESTAMP","tsr","push","message","pastNinety","tokenDayDatas","priceUSD","date","usd","updateUsdTsrGraph","updateUNIv2Graph","AreaChart","x1","y1","x2","y2","stopColor","stopOpacity","orientation","domain","dataMax","round","tickFormatter","CartesianGrid","Area","fillOpacity","LineChart","Line","strokeWidth","dot","Lobby","entry","crypto","createHash","update","digest","eventLog","eth","XfLobbyEnter","memberAddr","getToday","getDayEntries","resolveEntries","xfLobbyMembers","entryIndexes","headIndex","tailIndex","entries","entryIndex","entryId","pow","xfLobbyEntry","newEntry","rawAmount","referrerAddr","unmintedEntries","calcEntryTotals","availableHEX","totalETH","rawEntriesTotal","entriesTotal","mintedHEXTotal","potentialHEXTotal","amountETH","toLowerCase","mintedHEX","xfLobby","todayPendingETH","todayYourEntries","todayAvailableHEX","claimStats","HEARTS_PER_SATOSHI","todayYourEntriesRawTotal","todayYourEntriesTotal","HEXperETH","todayYourHEXPending","getPastLobbyEntries","resolvePastEntries","entryNum","mod","entriesCopy","dayEntriesCopy","getHistory","dailyDataCount","xfLobbyRange","xfLobbyPendingDays","lobbyDailyData","lobbyDailyETH","pastEntries","hasPendingEntryThisDay","resolveLobby","mappedDayData","resolveDay","hexa","get","lobbyData","lobbyDataUI","historyDataReady","sortLobbyDataStateByField","componentWillUnmount","resetFormAndReload","entryHEX","lobbySortKey","error","entryETH","walletETHBalance","_LOBBY","LobbyDays","dayData","HeaderDetail","epocHour","getUTCHours","nextEpoc","setUTCHours","setMinutes","setSeconds","setUTCDate","getUTCDate","timerStart","initialTime","direction","Hours","formatValue","Minutes","Seconds","lobbyIsActive","balanceETH","span","md","Blurb","fluid","hostname","maxHeight","Image","TewkStakeList","scanTewk","contractObject","progressLabel","pregressBar","parent","totalUSD","getTewkenaireStakes","tewkStakes","uiStakeList","hex","SYMBOL","progressBar","fullResolve","fullReject","Contract","ABI","CHAINS","hexContract","tewkContract","tewkAddress","playerStats","activeStakes","batchSize","foundCount","fetchedCount","progrssChunkSize","batchStart","batchEnd","hexStake","uniqueStakeId","utils","hexToNumberString","soliditySha3","tewkStake","stakeID","App","ourStake","tewk","stakeIdParam","uniqueID","block","Tewkenaire","provider","walletProvider","HEX2_totalUSD","HEX3_totalUSD","HEX4_totalUSD","HEX5_totalUSD","_TEWK","HEX2","HEX4","HEX5","uriQuery","URLSearchParams","search","has","setItem","removeItem","INITIAL_STATE","network","contractReady","contractGlobals","USDHEX","donation","totalHearts","USD","subscribeProvider","isMetaMask","autoRefreshOnNetworkChange","resetApp","accounts","newAddress","updateHEXBalance","networkId","reload","web3hexmob","publicConfigStore","updateETHBalance","eventCallbackHEX","result","hexEvent","Transfer","to","univ2Contract","Swap","toBlock","amount0In","amount1In","amount0Out","amount1Out","subscribe","getBalance","balanceOf","clearInterval","dayInterval","usdHexInterval","web3modal","clearCachedProvider","handleConnectWalletButton","triggerWeb3Modal","disconnectWallet","disconnect","close","WalletStatus","addressFragment","AppContent","_address","m","incomingReferrer","referrer","wssProvider","subscriptions","connect","detectTrustWallet","mainnet","rpcUrl","rpcURL","Trust","isImToken","isToshi","isCipher","isCoinBase","cachedProvider","selectWeb3ModalWallet","getProviderInfo","networkData","wssURL","Web3","providers","WebsocketProvider","Error","hasOwnProperty","handleRevert","enable","getAccounts","givenProvider","setAddress","isWalletConnect","isPortis","hexUsd","process","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","establishWeb3Provider","UNIV2","rawGlobals","k","binaryClaimStats","SATOSHI_UINT_SIZE","c","claimedBtcAddrCount","claimedSatoshisTotal","lastHour","currentHour","getHours","updateUsdHex","headerLogo","backgroundImage","marginLeft","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","CLAIMABLE_BTC_ADDR_COUNT","CLAIMABLE_SATOSHIS_TOTAL","LPB_BONUS_MAX_PERCENT","BPB_MAX_HEX","module","exports","0","START_DATE_POSIX","CLAIM_PHASE_START_DAY","CLAIM_PHASE_DAYS","GENESIS_BLOCK","LPB_BONUS_PERCENT","HEARTS_PER_HEX","BPB_BONUS_PERCENT","sharePool","_globals","unclaimedSatoshis","Object","viral","criticalMass","isFinite","replace","valueWithUnit","fetchWithTimeout","url","timer","fetch","finally"],"mappings":"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","file":"static/js/main.26914b85.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { \n    Container,\n    Card,\n    Button,\n    InputGroup,\n    Spinner,\n    Overlay,\n    Tooltip,\n    Badge,\n    Row,\n    Col,\n    Form\n} from 'react-bootstrap'\nimport { BigNumber } from 'bignumber.js'\nimport { EventEmitter } from 'events'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCopy } from '@fortawesome/free-solid-svg-icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { cryptoFormat } from './util.js'\n\nconst debug = require('debug')('Widgets')\n\nexport const CryptoVal = (props) => {\n    if (props.value === '---') return ( <>---</> )\n    let v = new BigNumber(props.value) \n    if (isNaN(v)) return ( <>NaN</> )\n    \n    const { valueString:s, unit } = cryptoFormat(v, props.currency)\n    const showUnit = props.showUnit || false\n    const wholeNumber = props.wholeNumber || false\n\n    // mute fractional part (including the period)\n    const r = s.match(/^(.*)(\\.\\d+)(.*)$/) \n    if (r && r.length > 1)\n        return ( \n            <span className={ props.className } >\n                { r[1] }\n            { !wholeNumber && \n                <span style={{ opacity: \"0.5\" }}>\n                    { r[2] }\n                </span>\n            }\n                { r[3] && r[3] }\n            { showUnit && <span className=\"unit\">&nbsp;{unit}</span>}\n            </span>\n        ) \n    else \n        return ( <span className=\"numeric\">{s}{ showUnit && <span className=\"unit\">&nbsp;{unit}</span> }</span> )\n}\n\nexport const WhatIsThis = (props) => {\n    const [show, setShow] = useState(false)\n    const target = useRef(null)\n    return (\n        <>\n            <span ref={target} style={{ cursor: \"pointer\" }} onClick={()=>setShow(!show)}>\n                { props.children }\n                { (props.showPill) && <sup><Badge variant=\"info\" pill className=\"ml-1\">?</Badge></sup> }\n            </span>\n            <Overlay \n                target={target.current} show={show}\n                rootClose={true} onHide={() => setShow(false)}\n                placement={props.placement || \"auto\"} flip\n                delay={{ show: 200, hide: 400 }}\n            >\n                <Tooltip {...props}>\n                    {props.tooltip}\n                </Tooltip>\n            </Overlay>\n        </>\n    )\n}\n\nexport const BurgerHeading = (props) => {\n    return (\n        <div className=\"burger-heading\">\n            <img src=\"/hex-burger.png\" alt=\"\" />\n            <span>{props.children}</span>\n        </div>\n    )\n}\n\n// eslint-disable-next-line\nconst sim = function(params) {\n    return {\n        send: function(options) {\n            var ee = new EventEmitter();\n            const delay = 1000\n            var count = 0\n            setTimeout(() => {\n                ee.emit('transactionHash', '0x5928acffbb00f86e055a3fb0ae85c87fefa86f0a72cdecca1fd6e4676460b206')\n                setInterval(() => (++ count < 4) && ee.emit('confirmation', count, '#simulated_recipt#'), delay*2)\n            }, delay)\n            setTimeout(() => ee.emit('receipt', '#simulated_receipt# !!!=> '+JSON.stringify({ params, options})), delay * 10 )\n            setTimeout(() => ee.emit('error', '#simulated_receipt#'), delay * 12.5)\n            return ee;\n        }\n    }\n}\n\nexport class VoodooButton extends React.Component {\n    constructor(props) {\n        super(props) \n        this.isVoodooButton = true\n        this.state = {\n            data: false,\n            wait: false,\n            hash: null,\n        }\n    }\n\n    stringifyWithFunctions(object) {\n        return JSON.stringify(object, (key, val) => {\n            if (typeof val === 'function') \n                return '[Function: '+key+']'\n            else if (typeof val === 'object')\n                return '[Object: '+key+']'\n            \n            return val;\n        });\n    };\n\n    componentDidMount = () => {\n    }\n\n    render() {\n        const { \n            contract,\n            method,\n            params,\n            options,\n            inputValid,\n            simulate,\n            confirmationCallback,\n            rejectionCallback,\n            callbackArgs,\n            ...other \n        } = this.props\n\n        const dataValid = (typeof inputValid === 'undefined') ? true : inputValid\n\n        const handleClick = async (contract, method, params, options, e ) => {\n            e.preventDefault()\n            e.stopPropagation()\n            if (!dataValid || wait) return\n\n            await this.setState({\n                wait: true,\n                data: 'requesting'\n            })\n\n            const func = simulate ? sim : contract.methods[method]\n            if (window.web3 && window.web3.currentProvider && window.web3.currentProvider.isTrust) {\n                debug('Sending via TrustWallet provider')\n                // TrustWallet [internal browser] returns immediately, with nothing and \n                // never again :/ (See XXX notes in App.js)\n                func(...params).send(options)\n                setTimeout(async ()=>{\n                    await this.setState({\n                        data: \"REQUESTED\",\n                        hash: \"see wallet's log\"\n                    })\n                    setTimeout(async ()=>{\n                        await this.setState({ wait: false, data: false, hash: null})\n                        typeof confirmationCallback === 'function' && confirmationCallback.apply(this, callbackArgs)\n                        typeof rejectionCallback === 'function' && rejectionCallback.apply(this, callbackArgs)\n                    }, 18008)\n                }, 2000)\n                return false // that's all folks\n            }\n\n            debug(\"contract.methods.%s(%o).send(%o)\", method, params, options)\n            \n            func(...params).send(options)\n                .once('transactionHash', (hash) => {\n                    debug(`${method}::transactionHash: `, hash)\n                    this.setState({ \n                        hash, \n                        data: 'confirming' \n                    })\n                })\n                .on('confirmation', (confirmationNumber, receipt) => {\n                    debug(`${method}::confirmationNumber: %s, receipt: %O`, confirmationNumber, receipt)\n                    if (this.state.wait) {\n                        this.setState({\n                            wait: false,\n                            data: false,\n                            hash: null\n                        }, () => {\n                            typeof confirmationCallback === 'function' && confirmationCallback.apply(this, callbackArgs)\n                        })\n                    }\n                    this.setState({ data: confirmationNumber+1 })\n                })\n                .once('receipt', (receipt) => {\n                    debug(`${method}::receipt: %O`, receipt)\n                })\n                .on('error', async (err, receipt) => { // eg. rejected or out of gas\n                    debug(`${method}::error: `, err, receipt)\n                    await this.setState({ data: 'rejected', wait: true })\n                    setTimeout(() => {\n                        this.setState({ wait: false, data: false, hash: null})\n                        typeof rejectionCallback === 'function' && rejectionCallback.apply(this, callbackArgs)\n                    }, 2000)\n                })\n                .catch( async (err, receipt) => {\n                    debug(`${method}::error: `, err, receipt)\n                    await this.setState({ data: 'rejected', wait: true })\n                    setTimeout(() => {\n                        this.setState({ wait: false, data: false, hash: null })\n                        typeof rejectionCallback === 'function' && rejectionCallback.apply(this, callbackArgs)\n                    }, 2000) \n                })\n            return false\n        }\n\n        const { data, wait, hash } = this.state\n        let _RESPONSE, _color, hashUI\n        if (!wait ) { _RESPONSE = this.props.children; _color = '' }\n        else if (!isNaN(parseInt(data))) { _RESPONSE = (<><span style={{fontSize: '0.9em'}}>CONFIRMED</span><sup>{data}</sup></>); _color = 'text-success' }\n        else { _RESPONSE = data; _color = (_RESPONSE !== 'rejected') ? 'text-info' : 'text-danger' } \n        const _className = (other.className || '') + ` ${_color}`\n        if (hash) hashUI = data === 'REQUESTED' \n            ? hash \n            : hash.slice(0,6)+'....'+hash.slice(-6)\n\n        return (\n            <div style={{ display: \"inline-block\" }} onClick={(e) => e.stopPropagation()} >\n                    <Button {...other}\n                        variant={other.variant}\n                        className={_className}\n                        disabled={!dataValid}\n                        onClick={(e) => handleClick(contract, method, params, options, e)}\n                    >\n                    { wait && <> \n                        <Spinner\n                            as=\"span\"\n                            variant=\"light\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                        />{' '}</>\n                    }\n                        <span className={_className}>{_RESPONSE}</span>\n                    </Button>\n                { hash &&\n                    <div className=\"text-info small mt-2\">TX Hash: <a href={'https://etherscan.io/tx/'+hash} \n                        target=\"_blank\" rel=\"noopener noreferrer\">{hashUI}</a>{' '}\n                        <CopyToClipboard text={hash}>\n                            <FontAwesomeIcon icon={faCopy} />\n                        </CopyToClipboard>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport function Donaticator(props) {\n    const [show, setShow] = useState(false);\n    const [donateEnabled, setDonateEnabled] = useState(false);\n\n    const [amount, setAmount] = useState(\"\");\n    const target = useRef(null);\n\n    const handleDonate = async (e) => {\n        e.preventDefault()\n\n        if (isNaN(parseInt(amount))) return false\n\n        const method = \"transfer\"\n        const func = window.contract.methods[method]\n\n        await func( \"0x920b96701676cdAC9e2dB0b7c2979FF2577A0FA9\", new BigNumber(amount).times(1e8).toString())\n            .send({ from: props.fromAddress })\n            .once('transactionHash', (hash) => debug(`${method}::txHash=${hash}`)) \n            .on('error', (err, receipt) => { // eg. rejected or out of gas\n                debug(`${method}::error: `, err, receipt)\n            })\n            .catch((err, receipt) => {\n                debug(`${method}::error: `, err, receipt)\n            })\n    }\n\n    const handleDonationAmount = (e)  => {\n        e.preventDefault()\n        setAmount(parseInt(e.target.value) || \"\")\n    }\n\n    const showCopied = (e) => {\n        setShow(true)\n        setTimeout(() => setShow(false), 3000)\n    }\n\n    const donationAddress = \"0x920b96701676cdAC9e2dB0b7c2979FF2577A0FA9\"\n    \n    return (\n        <Container className=\"pt-2 mt-3\">\n            <Card.Body className=\"rounded text-center text-light pb-3 mb-3\">\n                <img className=\"d-inline-block\" src=\"/donate_hex.png\" alt=\"donate to HEXmob\" style={{ verticalAlign: \"middle\" }} />\n                <form>\n                    <h5 className=\"m-0\">please support <strong>HEX<sup>mob</sup></strong></h5>\n                    <div style={{ width: \"20rem\", margin: \"auto\" }}>\n                        <CopyToClipboard text={donationAddress} onCopy={showCopied}>\n                        <input\n                            style={{ display: \"inline-block\" }}\n                            name=\"addr\"\n                            type=\"text\"\n                            readOnly={true}\n                            ref={target}\n                            title=\"copy to clipboard\"\n                            className=\"donate_addr w-100 text-center btn btn-dark py-0\" \n                            value={donationAddress}\n                        />\n                        </CopyToClipboard>\n                    </div>\n                    { props.walletConnected && \n                    <>\n                        <InputGroup style={{ maxWidth: \"300px\", margin: \"auto\" }}>\n                            <Form.Control\n                                as=\"input\"\n                                name=\"amount\"\n                                type=\"number\"\n                                placeholder=\"HEX amount\" \n                                htmlSize=\"12\"\n                                ref={target}\n                                onBlur={ handleDonationAmount }\n                                onChange={() => { setDonateEnabled(target.current.value !==\"\") }} \n                            />\n                            <InputGroup.Append>\n                                <Button \n                                    variant=\"success\" size=\"sm\"\n                                    value=\"donate\"\n                                    disabled={!donateEnabled}\n                                    onClick={ handleDonate }\n                                >\n                                    DONATE NOW\n                                </Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                        <div className=\"mt-3\">{/*#7*/}\n                            <Button \n                                variant=\"info\" size=\"sm\" className=\"text-dark\"\n                                onClick={(e) => {\n                                    e.preventDefault(); \n                                    window.open(\"https://etherscan.io/address/0x920b96701676cdAC9e2dB0b7c2979FF2577A0FA9\")}\n                                }\n                            >\n                                view donations on etherscan.io\n                            </Button>\n                        </div>\n                    </>\n                    }\n                </form>\n            </Card.Body>\n            <Overlay target={target.current} show={show} placement=\"top\">\n                <Tooltip>\n                    address copied to clipboard\n                </Tooltip>\n            </Overlay>\n        </Container>\n    )\n}\n\nexport const GitHubInfo = (props) => {\n    return (\n        <Container className=\"text-light text-center\">\n            <strong>Open Source</strong> <span className=\"text-muted\">GPLv3</span><br/>\n            <a href=\"https://github.com/gruvin/hexmob.win\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n        </Container>\n    )\n}\n\nexport function MetamaskUtils(props) {\n    const addHEXtoken = async () => {\n        const tokenAddress = \"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39\"\n        const tokenSymbol = \"HEX\"\n        const tokenDecimals = 8\n        const tokenImage = \"https://ethhex.com/static/media/hex-icon.92333d74.png\"\n\n        try {\n          // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n          const wasAdded = await window.ethereum.request({\n            method: \"wallet_watchAsset\",\n            params: {\n              type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n              options: {\n                address: tokenAddress, // The address that the token is at.\n                symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n                decimals: tokenDecimals, // The number of decimals in the token\n                image: tokenImage, // A string url of the token logo\n              },\n            },\n          })\n\n          if (wasAdded) {\n            console.log(\"Thanks for your interest!\")\n          } else {\n            console.log(\"Your loss!\")\n          }\n        } catch (error) {\n          console.log(error)\n        }\n    }\n\n    const addPulseChain = async () => {\n        if (!0) return\n        // test using binance Chain (BSC)\n        await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n                chainId: \"0x38\",\n                chainName: \"BSC\",\n                nativeCurrency: {\n                    name: \"Pulse Chain [placeholder]\",\n                    symbol: \"BNB\",\n                    decimals: 18\n                },\n                rpcUrls: [ \"https://bsc-dataseed.binance.org/\" ],\n                blockExplorerUrls: [ \"https://bscscan.com\" ],\n                iconUrls: [] // Currently ignored.\n            }]\n        })\n    }\n\n    return (\n            <Row className=\"text-light text-center mb-3\">\n                <Col className=\"col-12\">\n                    <h4>Metamask Helpers</h4>\n                </Col>\n                <Col className=\"text-right\">\n                    <Button size=\"small\" className=\"\" onClick={addHEXtoken}>Add HEX Token</Button>\n                </Col>\n                <Col className=\"text-left\">\n                    <Button size=\"small\" onClick={addPulseChain}>Add Pulsenet</Button>\n                </Col>\n            </Row>\n    )\n}\n\n","import React from 'react'\nimport { \n    Container,\n    Form,\n    FormControl,\n    InputGroup,\n    Dropdown,\n    DropdownButton,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport './Stakes.scss'\nimport { BigNumber } from 'bignumber.js'\nimport HEX from './hex_contract'\nimport { calcBigPayDaySlice, calcAdoptionBonus } from './util'\nimport { CryptoVal, WhatIsThis, VoodooButton } from './Widgets' \nimport { ResponsiveContainer, Bar, BarChart, Label, Rectangle, ReferenceLine, Tooltip, XAxis, YAxis } from 'recharts'\nconst axios = require('axios').create({\n    baseURL: '/',\n    timeout: 3000,\n    headers: { \"Content-Type\": \"application/json\", \"Accept\": \"applicaiton/json\"},\n});\n\nconst debug = require('debug')('NewStakeForm')\ndebug('loading')\n\nexport class NewStakeForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            stakeAmount: '',\n            stakeDays: '',\n            longerPaysBetter: BigNumber(0), // Hearts\n            biggerPaysBetter: BigNumber(0),\n            bonusTotal: BigNumber(0),\n            effectiveHEX: BigNumber(0),\n            stakeShares: BigNumber(0),\n            shareRate: BigNumber(10000),\n            bigPayDay: BigNumber(0),\n            percentGain: 0.0,\n            percentAPY: 0.0,\n            data: [],\n            graphIconClass: \"\" // App.scss:  .icon-wait-bg / .icon-error-bg\n        }\n    }\n\n    async componentDidMount() {\n        const shareRate = this.props.contract.Data.globals.shareRate.div(10) || BigNumber(10000)\n        this.setState({ shareRate })\n        this.lastStakeDays = null\n        window._NEW = this // DEBUG remove me\n    }\n\n    resetForm = () => {\n        document.getElementById('stake_amount').value = ''\n        document.getElementById('stake_days').value = ''\n        this.setState({ stakeAmount: null, stakeDays: null })\n        this.updateFigures()\n    }\n\n    updateFigures = () => {\n        const { currentDay, globals } = this.props.contract.Data\n\n        let { stakeDays, stakeAmount } = this.state\n        stakeDays = parseInt(this.state.stakeDays) || 0\n        stakeAmount = BigNumber(stakeAmount).times(1e8)\n        if (stakeAmount.isNaN()) stakeAmount = BigNumber(0)\n\n        const { LPB_MAX_DAYS, LPB, BPB_MAX_HEARTS, BPB } = HEX\n        /*\n        debug('stakeAmount: ', stakeAmount.toString())\n        debug('stakeDays: ', stakeDays)\n        debug('LPB: ', LPB.toString())\n        debug('LPB_MAX_DAYS: ', LPB_MAX_DAYS.toString())\n        debug('BPB: ', LPB.toString())\n        debug('BPB_MAX_HEARTS: ', BPB_MAX_HEARTS.toString())\n        */\n\n        let cappedExtraDays = 0;\n        if (stakeDays >  1) {\n            cappedExtraDays = stakeDays <= LPB_MAX_DAYS \n                ? stakeDays - 1 \n                : LPB_MAX_DAYS;\n        }\n        const longerPaysBetter = stakeAmount.times(cappedExtraDays)\n            .div(LPB)\n\n        const newStakedHearts = BigNumber(stakeAmount)\n        const cappedStakedHearts = newStakedHearts.lte(BPB_MAX_HEARTS)\n            ? newStakedHearts\n            : BPB_MAX_HEARTS\n        const biggerPaysBetter = stakeAmount.times(cappedStakedHearts)\n            .idiv(BPB)\n\n        const bonusTotal = longerPaysBetter.plus(biggerPaysBetter)\n        const effectiveHEX = stakeAmount.plus(bonusTotal)\n        const shareRate = globals.shareRate.div(10) || BigNumber(10000)\n        const stakeShares = effectiveHEX.times(10000).div(shareRate)\n\n        // Big Pay Day bonuses\n\n        let bigPayDay = BigNumber(0)\n        let percentGain = BigNumber(0)\n        let percentAPY = BigNumber(0)\n        if (this.state.endDay > HEX.BIG_PAY_DAY) {\n            const BPD_sharePool = globals.stakeSharesTotal.plus(stakeShares)\n            const bigPaySlice = calcBigPayDaySlice(stakeShares, BPD_sharePool, globals)\n            const adoptionBonus = calcAdoptionBonus(bigPaySlice, globals)\n            bigPayDay = bigPaySlice.plus(adoptionBonus)\n\n            percentGain = stakeAmount.isZero() ? stakeAmount : bigPayDay.div(stakeAmount).times(100)\n            const startDay = currentDay+1\n            percentAPY = BigNumber(365).div(HEX.BIG_PAY_DAY + 1 - startDay).times(percentGain)\n        }\n\n        this.setState({\n            longerPaysBetter,\n            biggerPaysBetter,\n            bonusTotal,\n            effectiveHEX,\n            shareRate,\n            stakeShares,\n            bigPayDay,\n            percentGain: percentGain.toPrecision(6, 1),\n            percentAPY: percentAPY.toPrecision(6, 1)\n        })\n    }\n\n    resetFormAndReloadStakes = () => { \n        this.resetForm()\n        this.props.reloadStakes()\n    }\n\n    updateBarGraph = () => {\n        const { startDay, endDay } = this.state\n        if (isNaN(startDay + endDay)) return\n        const numDataPoints = 31\n        const graphStartDay = Math.max(startDay, endDay - Math.floor(numDataPoints / 2))\n        const graphEndDay = graphStartDay + numDataPoints\n        \n        this.setState({ \n            data: [], \n            graphIconClass: \"icon-wait-bg\"\n        })\n\n        axios.post('https://api.thegraph.com/subgraphs/name/codeakk/hex', \n            JSON.stringify({ query: `{\n                    stakeStarts (\n                        where: {\n                            endDay_gte:${graphStartDay},\n                            endDay_lte:${graphEndDay}\n                        }\n                    )\n                    {\n                        stakeShares\n                        endDay\n                    }\n                }` \n            })\n        )\n        .then(response => {\n            debug('response', response)\n            const { data: graphJSON } = response\n            var collated = []\n            for (let d = graphStartDay; d <= graphEndDay; d++)\n                collated[d - graphStartDay] = { endDay: d.toString(), stakeShares: 0 }  \n            graphJSON.data.stakeStarts.forEach(oRow => {\n                const TShares = new BigNumber(oRow.stakeShares).div(10e12).toNumber()\n                let index = parseInt(oRow.endDay) - graphStartDay\n                collated[index].stakeShares += TShares\n            })\n            this.setState({data: collated, graphIconClass: \"\" })\n        })\n        .catch(e => {\n            debug(`Graph API: ${e}`)\n            this.setState({ graphIconClass: \"icon-error-bg\" })\n        })\n    }\n\n    render() {\n        const { balance } = this.props.wallet\n        const { currentDay } = this.props.contract.Data\n\n        const handleAmountChange = (e) => {\n            e.preventDefault()\n            this.setState({\n                stakeAmount: e.target.value\n            }, this.updateFigures)\n        }\n\n        const handleDaysBlur = (e) => {\n            const stakeDays = parseInt(e.target.value) || 0\n            if (!stakeDays) {\n                this.setState({\n                    data: [],\n                    graphIconClass: \"icon-wait-bg\"\n                })\n            } else if (this.lastStakeDays !== stakeDays) {\n                clearTimeout(this.daysTimer)\n                this.updateBarGraph()\n            }\n        }\n\n        const handleDaysChange = (e) => {\n            e.preventDefault()\n            clearTimeout(this.daysTimer)\n\n            const immediate = (e.target || false) && (e.target.immediate || false)\n\n            const stakeDays = parseInt(e.target.value) || 0\n\n            const { currentDay } = this.props.contract.Data\n            const endDay = currentDay + 2 + stakeDays\n\n            const _startDate = new Date(HEX.START_DATE.getTime() + (currentDay + 1) * 24 * 3600 * 1000)\n            const _endDate = new Date(HEX.START_DATE.getTime() + endDay * 24 * 3600 * 1000)\n            const startDate = _startDate.toLocaleDateString()\n            const startTime = _startDate.toLocaleTimeString()\n            const endDate = _endDate.toLocaleDateString()\n            const endTime = _endDate.toLocaleTimeString()\n\n            this.setState({\n                stakeDays: stakeDays > 5555 ? '5555' : stakeDays.toString(),\n                startDay: currentDay+2,\n                endDay: currentDay+2+stakeDays,\n                startDate, \n                startTime,\n                endDate,\n                endTime\n            }, () => {\n                this.updateFigures()\n                if (!stakeDays) {\n                    this.setState({\n                        data: [],\n                        graphIconClass: \"\"\n                    })\n                } else if (stakeDays !== this.lastStakeDays) {\n                    // get new graph data only if >= 1.2 seconds since last stakeDays change (don't DDoS graph server between key presses)\n                    this.daysTimer = setTimeout(() => { \n                        this.lastStakeDays = stakeDays\n                        this.updateBarGraph()\n                    }, immediate ? 0 : 1200)\n                }\n            })\n        }\n        \n        const handleAmountSelector = (key, e) => {\n            e.preventDefault()\n            const v=e.target.dataset.portion\n            const portion = parseFloat(v) || 1.0\n            const amount = (v === 'max')\n                ? balance.div(1e8)\n                : balance.idiv(1e8).times(portion).toFixed(0, 1)\n            this.setState({ stakeAmount: amount.toString() }, this.updateFigures)\n        }\n\n        const handleDaysSelector = (key, e) => {\n            e.preventDefault()\n\n            function plusYears(years) {\n                const n = new Date(Date.now())\n                const d = new Date()\n                d.setYear(n.getFullYear() + years)\n                return Number((d.valueOf() - n.valueOf()) / 1000 / 3600 / 24).toFixed(0)\n            }\n            function plusMonths(months) {\n                const n = new Date(Date.now())\n                const d = new Date()\n                d.setMonth(n.getMonth() + months)\n                return Number((d.valueOf() - n.valueOf()) / 1000 / 3600 / 24).toFixed(0)\n            }\n\n            let days\n            switch (e.target.dataset.days) {\n                case 'max': days = 5555; break;\n                case '10y': days = plusYears(10); break;\n                case '5y': days = plusYears(5); break;\n                case '3y': days = plusYears(3); break;\n                case '2y': days = plusYears(2); break;\n                case '1y': days = plusYears(1); break;\n                case '6m': days = plusMonths(6); break;\n                case '3m': days = plusMonths(3); break;\n                case '1m': days = plusMonths(1); break;\n                case '1w': days = 7; break;\n                default: days = 1;\n            }\n\n            e.target.value = days\n            e.target.immediate = true\n            this.setState({ \n                stakeDays: days.toString(),\n            }, handleDaysChange(e))\n        }\n\n        const handleCursorClick = (endDay, e) => {\n            e.preventDefault()\n            const { currentDay } = this.props.contract.Data\n\n            this.setState({ \n                stakeDays: (endDay - currentDay - 2).toString(),\n                endDay\n            }, () => {\n                this.updateFigures()\n                this.updateBarGraph()\n            })\n        }\n\n        const GraphCustomCursor = (props) => {\n            const { x, y, width, height } = props\n            return ( \n                <Rectangle \n                    fill=\"rgba(0,0,0,0.3)\" \n                    stroke=\"none\" \n                    x={x} y={y} \n                    width={width} \n                    height={height}\n                    onClick={(e) => handleCursorClick(props.payload[0].payload.endDay, e)}\n                />\n            )\n        }\n\n        return (\n            <Form>\n                <Row className=\"overflow-auto\">\n                    <Col xs={12} sm={5}>\n                        <Container className=\"p-0 pl-2 pr-2\">\n                            <Form.Group controlId=\"stake_amount\" className=\"\">\n                                <Form.Label className=\"w-100 mb-0\">\n                                    Stake Amount in HEX\n                                </Form.Label> \n                                    <InputGroup className=\"p-0 col-8 col-sm-12\">\n                                        <FormControl\n                                            type=\"number\"\n                                            value={this.state.stakeAmount}\n                                            placeholder=\"amount in HEX\"\n                                            aria-label=\"amount to stake in HEX\"\n                                            aria-describedby=\"basic-addon1\"\n                                            onChange={handleAmountChange}\n                                        />\n                                        <DropdownButton\n                                            as={InputGroup.Append}\n                                            variant=\"dark\"\n                                            key=\"percent_balance_selector\"\n                                            title=\"HEX\"\n                                            className=\"numeric\"\n                                            onSelect={handleAmountSelector}\n                                        >\n                                            <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-portion=\"max\">MAX</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-portion={1.00}>100%</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-portion={0.75}>75%</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-portion={0.50}>50%</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-portion={0.25}>25%</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-portion={0.10}>10%</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-portion={0.05}>5%</Dropdown.Item>\n                                        </DropdownButton>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group controlId=\"stake_days\" className=\"\">\n                                    <Form.Label className=\"mb-0\">Stake Length in Days</Form.Label>\n                                        <InputGroup className=\"p-0 col-12\">\n                                            <FormControl\n                                                type=\"number\"\n                                                placeholder=\"min one day\" \n                                                value={this.state.stakeDays <= 0 ? '' : this.state.stakeDays}\n                                                aria-label=\"number of days to stake min one day\"\n                                                onChange={handleDaysChange} \n                                                onBlur={handleDaysBlur}\n                                            />\n                                            <DropdownButton\n                                                as={InputGroup.Append}\n                                                variant=\"dark\"\n                                                key=\"days_selector\"\n                                                title=\"DAYS\"\n                                                onSelect={handleDaysSelector}\n                                                className=\"mr-3 numeric\"\n                                            >\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"max\">MAX (about 15yrs & 11wks)</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"10y\">Ten Years</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"5y\">Five Years</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"3y\">Three Years</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"2y\">Two Years</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"1y\">One Year</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"6m\">Six Months</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"3m\">Three Months</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"1m\">One Month</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"1w\">One Week</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\" eventKey=\"new_stake\" data-days=\"min\">MIN (one day)</Dropdown.Item>\n                                            </DropdownButton>\n                                        </InputGroup>\n                                </Form.Group>\n                        </Container>\n                    </Col>\n                    <Col xs={12} sm={7}>\n                        <Container className=\"p-0 pl-2 lr-2\" style={{ maxWidth: \"360px\" }}>\n                            <Row>\n                                <Col className=\"col-3 m-0 pl-2 pr-0 text-info h4\">Starts</Col>\n                                <Col className=\"col-3 pr-0\"><span className=\"text-muted small\">DAY </span>{this.state.startDay}</Col>\n                                <Col className=\"col-6 pr-0\">{this.state.startDate} <span className=\"text-muted d-none d-md-inline\">{this.state.startTime}</span></Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"col-3 m-0 pl-2 pr-0 text-info h4\">Ends</Col>\n                                <Col className=\"col-3 pr-0\"><span className=\"text-muted small\">DAY </span>{this.state.endDay}</Col>\n                                <Col className=\"col-6 pr-0\">{this.state.endDate} <span className=\"text-muted d-none d-md-inline\">{this.state.endTime}</span></Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"col-12 mt-2 mb-0 pl-2 text-info h3\">Bonus HEX (effective)</Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"col-7 ml-0 numeric\">Bigger Pays Better</Col>\n                                <Col className=\"col-5 pl-0 pl-0 text-right\">+ <CryptoVal value={this.state.biggerPaysBetter} showUnit /></Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"col-7 ml-0 numeric\">Longer Pays Better</Col>\n                                <Col className=\"col-5 pl-0 text-right\">+ <CryptoVal value={this.state.longerPaysBetter.toFixed(0)} showUnit /></Col>\n                            </Row>\n                            <Row className=\"pt-2\" style={{ backgroundColor: \"#042e00\" }}>\n                                <Col className=\"pl-2\">\n                                    <WhatIsThis showPill tooltip={\n                                        <>\n                                            Effective HEX\n                                            <span className=\"text-success\"> = </span><br/>\n                                            Stake Amount in HEX\n                                            <span className=\"text-success\"> + </span>\n                                            Stake Bonuses\n                                        </>\n                                    }>\n                                        <span className=\"h4\">Effective HEX</span>\n                                    </WhatIsThis>\n                                </Col>\n                                <Col className=\"text-right text-success h3\"><strong><CryptoVal value={this.state.effectiveHEX} /></strong> <span className=\"text-muted\">HEX</span></Col>\n                            </Row>\n                            <Row className=\"my-2 text-danger justify-content-end\">\n                                <Col className=\"col-4 pl-2\">Share Rate</Col>\n                                <Col className=\"col-4 pl-2 text-right numeric\">\n                                    <strong><CryptoVal value={this.state.shareRate} currency=\"TSHARE_PRICE\" /> <span className=\"text-muted\">HEX</span></strong>\n                                </Col>\n                            </Row>\n                            <Row className=\"justify-content-end\">\n                                <Col className=\"col-4 pl-2\">\n                                    <WhatIsThis showPill tooltip={\n                                        <>\n                                            T-Shares\n                                            <span className=\"text-success\"> = </span><br/>\n                                            Effective HEX\n                                            <span className=\"text-success\"> x </span>\n                                            Share Rate\n                                        </>\n                                    }>\n                                        <span className=\"h5 text-success\">Shares</span>\n                                    </WhatIsThis>\n                                </Col>\n                                <Col className=\"col-4 text-right\">\n                                    <CryptoVal className=\"h5 text-success\" value={this.state.stakeShares} currency=\"SHARES\" />\n                                </Col>\n                            </Row>\n                        </Container>\n                        <Container className=\"text-right my-2\">\n                            <VoodooButton \n                                contract={this.props.contract}\n                                method=\"stakeStart\" \n                                params={[BigNumber(this.state.stakeAmount).times(1e8).toString(), this.state.stakeDays/*string*/]}\n                                options={{ \n                                    from: this.props.wallet.address\n                                }}\n                                inputValid={ (BigNumber(this.state.stakeAmount).gt(0) && this.state.stakeDays > 0) }\n                                confirmationCallback={this.resetFormAndReloadStakes}\n                                variant=\"stake btn-start\"\n                            >\n                                <strong>STAKE NOW</strong>\n                            </VoodooButton>\n                        </Container>\n\n                        { (currentDay < (HEX.BIG_PAY_DAY - 1)) && (\n                        <Container className=\"bg-secondary rounded mt-2 pt-2 pb-2\">\n                            <Row>\n                                <Col>\n                                    <strong>\n                                        <span className=\"text-info\">Big</span>\n                                        <span className=\"text-warning\">Pay</span>\n                                        <span className=\"text-danger\">Day</span>\n                                    </strong> \n                                    {' '}\n                                    <WhatIsThis>\n                                        Reduces as others start new stakes.<br/>\n                                        Increases as others end their stakes.\n                                    </WhatIsThis>\n                                </Col>\n                                <Col className=\"text-right\"><CryptoVal value={this.state.bigPayDay} /> HEX</Col>\n                            </Row>\n                            <Row>\n                                <Col>% Gain<span className=\"text-info\">*</span> </Col>\n                                <Col className=\"text-right\"><CryptoVal value={this.state.percentGain} currency='PERCENT' />%</Col>\n                            </Row>\n                            <Row>\n                                <Col>% APY<span className=\"text-info\">*</span></Col>\n                                <Col className=\"text-right\"><CryptoVal value={this.state.percentAPY} currency='PERCENT' />%</Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"pt-2\"><span className=\"text-info\">*</span> <em>If stake still open on BigPayDay</em></Col>\n                            </Row>\n                        </Container>\n                        ) }\n                    </Col>\n\n            { (this.state.data) && \n                    <Container className=\"p-0 pl-2 pr-2\">\n                        <h6 className=\"mt-3 ml-3 text-info\">Other Stakes Ending</h6>\n                        <ResponsiveContainer width=\"90%\" height={220}>    \n                            <BarChart \n                                className={ this.state.graphIconClass }\n                                margin={{ top: 16, right: 5, bottom: 16, left: 15 }}\n                                data={this.state.data}\n                            >\n                                <XAxis dataKey=\"endDay\">\n                                    <Label value=\"day\" offset={-3} position=\"insideBottom\" fill=\"#aaa\" />\n                                </XAxis>\n                                <YAxis type=\"number\">\n                                    <Label value=\"Tsh   \" offset={15} angle={-90} position=\"insideLeft\" fill=\"#ff7700\" />\n                                </YAxis>\n                                <ReferenceLine x={this.state.endDay} stroke=\"#ffaa00\" strokeDasharray=\"3 3\" />\n                                <Bar dataKey=\"stakeShares\" fill=\"#ff7700\" isAnimationActive={true} />\n                                <Tooltip \n                                    filterNull={true}\n                                    labelFormatter={ (value, name, props) => ([ \"day \"+value ]) }\n                                    formatter={ (value, name, props) => ([ parseFloat(value).toFixed(3)+\" Tsh\" ]) }\n                                    wrapperStyle={{ padding: \"0\" }}\n                                    contentStyle={{ padding: \"3px\", backgroundColor: \"rgba(0,0,0,0.3)\", border: \"none\", borderRadius: \"3px\" }}\n                                    labelStyle={{ lineHeight: \"1em\", padding: \"2px 5px\", color: \"#ffdd00\", fontWeight: \"bold\" }}\n                                    itemStyle={{ lineHeight: \"1em\", padding: \"2px 5px\", color: \"#ddd\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\n                                    cursor={<GraphCustomCursor/>}\n                                />\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </Container>\n            }\n                </Row>\n            </Form>\n            \n        )\n    }\n}\n","import React, { createRef, useContext } from 'react'\nimport { \n    Container,\n    Card,\n    ProgressBar,\n    Accordion,\n    AccordionContext,\n    useAccordionToggle,\n    Row,\n    Col,\n    Badge,\n    Button,\n    Overlay,\n    Popover,\n} from 'react-bootstrap'\nimport './Stakes.scss'\nimport HEX from './hex_contract'\nimport { format } from 'd3-format'\nimport { CryptoVal, VoodooButton } from './Widgets' \nimport { BigNumber } from 'bignumber.js'\n\nconst debug = require('debug')('StakeInfo')\ndebug('loading')\n\nexport class StakeInfo extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            esShow: false\n        }\n        this.esRef = createRef()\n    }\n\n    render() {\n        const { contract, stake, usdhex} = this.props\n        const { currentDay } = contract.Data\n        const { startDay, endDay } = stake\n        \n        const progress = parseFloat((stake.progress / 1000).toPrecision(3))\n        const stakeDay = stake.lockedDay + stake.stakedDays // no. days into active stake\n        const exitClass = \n                currentDay < startDay ? \"pendingexit\"\n                : currentDay < stakeDay/2 ? \"earlyexit\"\n                : currentDay < stakeDay ? \"midexit\"\n                : currentDay < stakeDay+7 ? \"termexit\"\n                : \"lateexit\"\n        const progressVariant = \n            exitClass === \"pendingexit\" ? \"secondary\"\n            : exitClass === \"earlyexit\" ? \"danger\"\n            : exitClass === \"midexit\" ? \"warning\"\n            : exitClass === \"termexit\" ? \"success\"\n            : \"info\" // latexit\n\n        const shares = stake.stakeShares\n        const interest = stake.payout\n        const bigPayDay = stake.bigPayDay\n        const valueTotal = stake.stakedHearts.plus(interest).plus(stake.bigPayDay)\n        const usdValueTotal = valueTotal.div(1e8).times(usdhex).toNumber()\n\n        const percentGain = bigPayDay.plus(interest).div(stake.stakedHearts).times(100)\n        const daysServed = Math.min(currentDay - stake.startDay, stake.stakedDays)\n        const percentAPY = new BigNumber(365).div(daysServed).times(percentGain)\n\n        const _startDate = new Date(HEX.START_DATE.getTime() + startDay * 24 * 3600 * 1000)\n        const startDate = _startDate.toLocaleDateString()+' '+_startDate.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n        \n        const _endDate = new Date(HEX.START_DATE.getTime() + endDay * 24 * 3600 * 1000)\n        const endDate = _endDate.toLocaleDateString()+' '+_endDate.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n\n        const pending = (currentDay < stake.lockedDay)\n        const earlyExit = (currentDay < stakeDay)\n\n        const ContextAwareToggle = ({ children, eventKey, callback }) => {\n            const currentEventKey = useContext(AccordionContext);\n            const decoratedOnClick = useAccordionToggle(\n                eventKey,\n                () => callback && callback(eventKey),\n            );\n            const isCurrentEventKey = currentEventKey === eventKey;\n            return (\n                <Card.Header\n                    className={(isCurrentEventKey ? \"card-header-current\" : \"\")}\n                    onClick={decoratedOnClick}\n                >\n                {children}\n                </Card.Header>\n            );\n        }\n\n        return (\n            <Accordion xs={12} sm={6} defaultActiveKey=\"0\" key={stake.stakeId} className=\"my-2\">\n                <Card bg=\"dark\">\n                    <ContextAwareToggle eventKey={stake.stakeId}>\n                        <Container>\n                            <Row>\n                                <Col xs={6} className=\"text-left pr-0\">\n                                    <CryptoVal className=\"numeric font-weight-bold text-info h2\" value={shares} currency=\"SHARES\" />\n                                    <span className=\"text-muted small\"> SHARES</span> \n                                </Col>\n                                <Col xs={6} className=\"text-right pl-0\">\n                                    <span className=\"text-muted small\">VALUE </span> \n                                    <span className=\"numeric h3 text-success\">{\"$\"+format(\",.2f\")(usdValueTotal)}</span>\n                                </Col>\n                            </Row>\n                            <Row className=\"mb-1\">\n                                <Col xs={7} className=\"pr-0\">\n                                    <span className=\"text-muted small\">ENDS </span>\n                                    <span className=\"small\">{endDate}</span>\n                                </Col>\n                                <Col xs={5} className=\"text-right pl-0\">\n                                    { pending ? <Badge variant=\"primary\">PENDING</Badge> \n                                        : <>\n                                            <span className=\"text-muted small\">PROGRESS </span>\n                                            <span className=\"numeric\">{progress+\"%\"}</span>\n                                        </>\n                                    }\n                                </Col>\n                            </Row>\n                            { pending \n                                ? <ProgressBar variant={progressVariant} now={100} striped />\n                                : <ProgressBar variant={progressVariant} now={Math.ceil(progress)}  />\n                            }\n                        </Container>\n                    </ContextAwareToggle>\n                    <Accordion.Collapse eventKey={stake.stakeId}>\n                        <Card.Body onClick={(e) => this.setState({ esShow: false})}>\n                            <Row className=\"mt-2\">\n                                <Col className=\"text-right\"><strong>Start Day</strong></Col>\n                                <Col className=\"numeric\">{stake.startDay+1}</Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-right\"><strong>Staked Days</strong></Col>\n                                <Col className=\"numeric\">{stake.stakedDays}</Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-right\"><strong>End Day</strong></Col>\n                                <Col className=\"numeric\">{stake.endDay+1}</Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-right\"><strong>Start Date</strong></Col>\n                                <Col className=\"numeric\">{startDate}</Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-right\"><strong>End Date</strong></Col>\n                                <Col className=\"numeric\">{endDate}</Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-right\"><strong>Principal</strong></Col>\n                                <Col><CryptoVal className=\"numeric\" value={stake.stakedHearts} showUnit /></Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-right\"><strong>Shares</strong></Col>\n                                <Col><CryptoVal className=\"numeric\" value={stake.stakeShares.times(1e8)} /></Col>\n                            </Row>\n                        { bigPayDay.gt(0) &&\n                            <Row>\n                                <Col className=\"text-right\"><strong>\n                                    <span className=\"text-info\">Big</span>\n                                    <span className=\"text-warning\">Pay</span>\n                                    <span className=\"text-danger\">Day</span>\n                                </strong></Col>\n                                <Col><CryptoVal className=\"numeric\" value={bigPayDay} showUnit /></Col>\n                            </Row>\n                        }\n                            <Row>\n                                <Col className=\"text-right\"><strong>Interest</strong></Col>\n                                <Col><CryptoVal className=\"numeric\" value={interest} showUnit /></Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-right\"><strong>Total Value</strong></Col>\n                                <Col><strong><CryptoVal className=\"numeric\" value={valueTotal} showUnit /></strong></Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-success text-right\"><strong>Total USD</strong></Col>\n                                <Col className=\"numeric text-success\"><strong>{ \"$\"+format(\",.2f\")(valueTotal.div(1E8).times(usdhex).toNumber() )}</strong></Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-right\"><strong>% Gain</strong></Col>\n                                <Col className=\"numeric\">{format(',')(percentGain.toPrecision(5))}%</Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-right\"><strong>% APY</strong></Col>\n                                <Col className=\"numeric\">{format(',')(percentAPY.toPrecision(5))}%</Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"text-center mt-3\" ref={this.esRef}>\n                                    <Overlay target={this.esRef.current} show={this.state.esShow}>\n                                        <Popover>\n                                            <Popover.Content className=\"p-0\">\n                                                <div id=\"early-end-stake-alert\">\n                                                    <div className=\"bg-dark text-light p-3\">\n                                                        <h4 className=\"text-danger\">Emergency End Stake</h4>\n                                                        <p>\n                                                            Remember that you made a commitment to stay staked. This is an advanced feature \n                                                            for advanced users. <strong><em>You should not proceed</em> unless you <u>fully understand</u> what it \n                                                            will do.</strong>\n                                                        </p>\n                                                    </div>\n                                                </div>\n                                            </Popover.Content>\n                                        </Popover>\n                                    </Overlay>\n                                    <VoodooButton\n                                        style={{ display: !earlyExit || this.state.esShow ? \"inline-block\" : \"none\" }}\n                                        contract={window.contract}\n                                        method=\"stakeEnd\" \n                                        params={[stake.stakeIndex, stake.stakeId]}\n                                        options={{ from: stake.stakeOwner }}\n                                        variant={'exitbtn '+exitClass}\n                                        confirmationCallback={() => this.props.reloadStakes()}\n                                        rejectionCallback={() => this.setState({ esShow: false })} \n                                    >\n                                    { earlyExit && <>I UNDERSTAND — </>}END STAKE\n                                    </VoodooButton>\n                                    <Button \n                                        variant={'exitbtn '+exitClass}\n                                        style={{ display: earlyExit && !this.state.esShow ? \"inline-block\" : \"none\" }}\n                                        onClick={(e) => { e.stopPropagation(); this.setState({ esShow: true })} }>\n                                        EARLY END STAKE\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        )\n    }\n}\n","import React from 'react'\nimport { \n    Container,\n    Row, Col,\n    Card,\n    Button,\n    Modal,\n    Alert,\n    ProgressBar,\n    Accordion,\n} from 'react-bootstrap'\nimport './Stakes.scss'\nimport { BigNumber } from 'bignumber.js'\nimport HEX from './hex_contract'\nimport { calcBigPayDaySlice, calcAdoptionBonus } from './util'\nimport { NewStakeForm } from './NewStakeForm' \nimport { CryptoVal, BurgerHeading } from './Widgets' \nimport { StakeInfo } from './StakeInfo'\nimport BitSet from 'bitset'\nconst { format } = require('d3-format')\n\nconst debug = require('debug')('Stakes')\n\nclass Stakes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedCard: '',\n            stakeCount: null,\n            stakeList: null,\n            loadingStakes: true,\n            stakeContext: { }, // active UI stake context\n            showExitModal: false,\n            currentDay: '---',\n            pastStakesSortKey: { keyField: '', dir: -1 },\n            totalValue: new BigNumber(0),\n        }\n    }\n\n    unsubscribeEvents = () => {\n        try { this.props.contract.clearSubscriptions()} catch(e) { }\n    }\n\n    handleSubscriptionError = (e, r) => {\n        debug(\"websock subscription error: \", e)\n    }\n\n    subscribeEvents = () => {\n        this.props.contract.events.StakeStart( {filter:{stakerAddr:this.props.wallet.address}}, (e, r) => {\n        if (e) { \n                debug('ERR: events.StakeStart: ', e) \n                return\n            }\n            debug('events.StakeStart[e, r]: ', e, r)\n\n            if (r && !this.addToEventLog(r)) return\n\n            debug('CALLING loadAllStakes: this.props.wallet: %O', this.props.wallet)\n            this.loadAllStakes(this)\n        })\n        .on('connected', id => debug('subbed: StakeStart:', id))\n        .on('error', this.handleSubscriptionError)\n\n        this.props.contract.events.StakeEnd({ filter:{ stakerAddr: this.props.wallet.address } }, (e, r) => {\n            if (e) { \n                debug('ERR: events.StakeEnd:', e) \n                return\n            }\n            debug('events.StakeEnd[e, r]: ', e, r)\n            if (!this.addToEventLog(r)) return\n            debug('CALLING loadAllStakes: this.props.wallet: %O', this.props.wallet)\n            this.loadAllStakes(this)\n        })\n        .on('connected', id => debug('subbed: StakeEnd:', id))\n        .on('error', this.handleSubscriptionError)\n    }\n\n    static async getStakePayoutData(context, stakeData) {\n        const { contract } = context \n        const {\n            currentDay, \n            allocatedSupply, \n            globals \n        } = contract.Data\n\n        const startDay = stakeData.lockedDay\n        const endDay = startDay + stakeData.stakedDays\n        if (currentDay === startDay) return\n\n        const dailyData = await contract.methods.dailyDataRange(startDay, Math.min(currentDay, endDay)).call()\n\n        // iterate over daily payouts history\n        let payout = new BigNumber(0)\n\n        dailyData.forEach((mapped_dailyData) => {\n            const data = new BigNumber(mapped_dailyData).toString(16).padStart(64, '0')\n            const day = { // extract dailyData struct from uint256 mapping\n                payoutTotal: new BigNumber(data.slice(46,64), 16),\n                stakeSharesTotal: new BigNumber(data.slice(28,46), 16),\n                unclaimedSatoshisTotal: new BigNumber(data.slice(12,28), 16)\n            }\n            payout = payout.plus(day.payoutTotal.times(stakeData.stakeShares).idiv(day.stakeSharesTotal)) // .sol line: 1586\n        })\n\n\n        // Calculate our share of Daily Interest ___for the current (incomplete) day___\n        // HEX mints 0.009955% daily interest (3.69%pa) and stakers get adoption bonuses from that, each day\n        // .sol:1245:  rs._payoutTotal = rs._allocSupplyCached * 10000 / 100448995\n        const dailyInterestTotal = allocatedSupply.times(10000).idiv(100448995)\n        const interestShare = dailyInterestTotal.times(stakeData.stakeShares).idiv(globals.stakeSharesTotal)\n        const interestBonus = (currentDay < HEX.CLAIM_PHASE_END_DAY) ? calcAdoptionBonus(interestShare, globals) : 0\n\n        const interest = payout.plus(interestShare).plus(interestBonus)\n\n        let bigPayDay = new BigNumber(0)\n        if (startDay <= HEX.BIG_PAY_DAY && endDay > HEX.BIG_PAY_DAY) {\n            const bpdStakeSharesTotal = (currentDay < 352) // day is zero based internally\n                ? globals.stakeSharesTotal // prior to BPD \n                : new BigNumber(\"50499329839740027369\", 10) // value on BPD (day 353). Never gonna change so don't waste bw looking it up\n\n            const bigPaySlice = calcBigPayDaySlice(stakeData.stakeShares, bpdStakeSharesTotal, globals)\n            const bonuses = calcAdoptionBonus(bigPaySlice, globals)\n            bigPayDay = bigPaySlice.plus(bonuses)\n            if ( currentDay >= HEX.BIG_PAY_DAY) stakeData.payout = stakeData.payout.plus(stakeData.bigPayDay)\n            // TODO: penalties have to come off for late End Stake\n        }\n\n        return { interest, bigPayDay }\n    }\n\n    static async loadStakes(context) {\n        const { contract, address } = context\n        const { currentDay } = contract.Data\n        debug('Loading stakes for address: ', address)\n        if (!address) {\n            debug('******* loadStakes[] called with invalid address ********')\n            return null\n        }\n        const stakeCount = await contract.methods.stakeCount(address).call()\n\n        // use Promise.all to load stake data in parallel\n        var promises = [ ]\n        var stakeList = [ ]\n        for (let index = 0; index < stakeCount; index++) {\n            promises[index] = new Promise(async (resolve, reject) => { /* see ***, below */ // eslint-disable-line\n                const data = await contract.methods.stakeLists(address, index).call()\n\n                const progress = (currentDay < data.lockedDay) ? 0\n                    : Math.trunc(Math.min((currentDay - data.lockedDay) / data.stakedDays * 100000, 100000))\n\n                let stakeData = {\n                    stakeOwner: context.address,\n                    stakeIndex: index,\n                    stakeId: data.stakeId,\n                    lockedDay: Number(data.lockedDay),\n                    stakedDays: Number(data.stakedDays),\n                    stakedHearts: new BigNumber(data.stakedHearts),\n                    stakeShares: new BigNumber(data.stakeShares),\n                    unlockedDay: Number(data.unlockedDay),\n                    isAutoStake: Boolean(data.isAutoStakte),\n                    progress,\n                    bigPayDay: new BigNumber(0),\n                    payout: new BigNumber(0)\n                }\n                if (currentDay >= stakeData.lockedDay + 1) { // no payouts when pending or until day 2 into term\n                    const payouts = await Stakes.getStakePayoutData(context, stakeData)\n                    if (payouts) { // just in case\n                        stakeData.payout = payouts.interest\n                        stakeData.bigPayDay = payouts.bigPayDay\n                    }\n                }\n\n                stakeList = stakeList.concat(stakeData) //*** ESLint complains but it's safe, because non-mutating concat()\n                return resolve()\n            })\n        }\n        await Promise.all(promises)\n\n        return stakeList\n    }\n\n    getStaticContext = (publicAddress) => {\n        debug(\"typeof publicAddress = \", typeof(publicAddress))\n        debug(\"publicAddress = %O\", publicAddress)\n        const address = publicAddress || this.props.wallet.address\n        debug(\"address = %O\", address)\n        const { contract } = this.props\n        return { contract, address }\n    }\n\n    loadAllStakes = async (publicAddress) => {\n        this.setState({ loadingStakes: true })\n        const address = publicAddress || null\n        const stakeList = await Stakes.loadStakes(this.getStaticContext(address))\n        if (stakeList) {\n            let totalValue = new BigNumber(0)\n            stakeList.forEach(stakeData => {\n                const interest = stakeData.payout.plus(stakeData.bigPayDay)\n                totalValue = totalValue.plus(interest).plus(stakeData.stakedHearts)\n            })\n            //this.props.updateTotalHearts(totalValue)\n            this.setState({ \n                loadingStakes: false,\n                stakeList,\n                totalValue\n            })\n        }\n    }\n\n    loadStakeHistory = (publicAddress) => {\n        const { contract, address } = this.getStaticContext(publicAddress)\n        /* \n        uint40            timestamp       -->  data0 [ 39:  0]\n        address  indexed  stakerAddr\n        uint40   indexed  stakeId\n        uint72            stakedHearts    -->  data0 [111: 40]\n        uint72            stakeShares     -->  data0 [183:112]\n        uint72            payout          -->  data0 [255:184]\n        uint72            penalty         -->  data1 [ 71:  0]\n        uint16            servedDays      -->  data1 [ 87: 72]\n        bool              prevUnlocked    -->  data1 [ 95: 88]\n        */\n        this.setState({ pastStakes: [ ] }, () => {\n            contract.getPastEvents('StakeEnd',{ \n                fromBlock: 'earliest', \n                filter: { stakerAddr: address }\n            }).then(results => {\n                const pastStakes = results.map(data => {\n                    const { returnValues:r } = data\n                    const data0 = new BitSet.fromBinaryString(BigNumber(r.data0).toString(2))\n                    const data1 = new BitSet.fromBinaryString(BigNumber(r.data1).toString(2))\n                    data0.set(256)\n                    data1.set(256)\n                    return {\n                        timestamp:      Number(     data0.slice(  40, 111 ).toString(10)),\n                        stakerAddr:     r.stakerAddr,\n                        stakeId:        r.stakeId,\n                        stakedHearts:   BigNumber(  data0.slice( 40, 111).toString(10)),\n                        stakeShares:    BigNumber(  data0.slice(112, 183).toString(10)),\n                        payout:         BigNumber(  data1.slice(184, 255).toString(10)),\n                        penalty:        BigNumber(  data1.slice(  0,  71).toString(10)),\n                        servedDays:     Number(     data1.slice( 72,  87).toString(10)),\n                        prevUnlocked:   Boolean(    data1.slice( 88,  95).toString(10))\n                    }\n                })\n                debug('PAST_STAKES: %O', pastStakes)\n                this.setState({ pastStakes })\n            })\n        })\n    }\n\n    componentDidMount() {\n        if (localStorage && localStorage.getItem('debug')) window._STAKES = this // DEBUG REMOVE ME\n        if (window.location.pathname === \"/stakes\") this.setState({ selectedCard: \"current_stakes\" })\n\n        Promise.all([\n            this.loadAllStakes(this.props.publicAddress || null),\n            this.loadStakeHistory(this.props.publicAddress || null),\n            this.subscribeEvents(),\n        ])\n    }\n\n    componentDidUpdate = async (prevProps, prevState) => {\n        if (prevProps.wallet.address !== this.props.wallet.address) {\n            await this.loadAllStakes(this.props.publicAddress || null)\n        } else return null\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeEvents()\n    }\n\n     StakesList = (params) => {\n        const { currentDay } = this.props.contract.Data\n        const stakeList = this.state.stakeList.slice() || null\n        stakeList && stakeList.sort((a, b) => (a.progress < b.progress ? (a.progress !== b.progress ? 1 : 0) : -1 ))\n\n        let stakedTotal = new BigNumber(0)\n        let sharesTotal = new BigNumber(0)\n        let interestTotal = new BigNumber(0)\n        let bigPayDayTotal = new BigNumber(0)\n        let percentGainTotal = new BigNumber(0)\n        let percentAPYTotal = new BigNumber(0)\n\n        if (this.state.loadingStakes)\n            return ( <p>loading ...</p> )\n        else if (!stakeList.length)\n            return ( <p>no stake data found for this address</p> )\n\n        const stakeListOutput = stakeList.map((stakeData) => {\n            // debug('stakeData: %o', stakeData)\n            const startDay = Number(stakeData.lockedDay)\n            const endDay = startDay + Number(stakeData.stakedDays)\n\n            const _startDate = new Date(HEX.START_DATE)\n            const _endDate = new Date(HEX.START_DATE.getTime() + endDay * 24 * 3600 * 1000)\n            const startDate = _startDate.toLocaleDateString()\n            const endDate = _endDate.toLocaleDateString()\n\n            const interest = stakeData.payout\n            const bigPayDay = stakeData.bigPayDay\n\n            stakedTotal = stakedTotal.plus(stakeData.stakedHearts)\n            sharesTotal = sharesTotal.plus(stakeData.stakeShares)\n            bigPayDayTotal = bigPayDayTotal.plus(stakeData.bigPayDay)\n            interestTotal = interestTotal.plus(interest)\n\n            const stake = {\n                startDay,\n                endDay,\n                startDate,\n                endDate,\n                ...stakeData,\n                interest,\n                bigPayDay,\n            }\n\n            const percentGain = stake.bigPayDay.plus(interest).div(stake.stakedHearts).times(100)\n            const daysServed = Math.min(currentDay - stake.startDay, stake.stakedDays)\n            const percentAPY = new BigNumber(365).div(daysServed).times(percentGain)\n            percentGainTotal = percentGainTotal.plus(percentGain)\n            percentAPYTotal = percentAPYTotal.plus(percentAPY)\n\n            return stake\n        })\n        const averagePercentGain = percentGainTotal.div(stakeListOutput.length)\n        const averagePercentAPY = percentAPYTotal.div(stakeListOutput.length)\n\n        return (\n        <>\n            {\n                stakeListOutput.map((stakeData) => {\n                    return (\n                        <StakeInfo \n                            key={stakeData.stakeId}\n                            contract={window.contract} \n                            stake={stakeData} \n                            reloadStakes={this.loadAllStakes}\n                            usdhex={this.props.usdhex}\n                        />\n                    )\n                })\n            }\n            <Card xs={12} sm={6} bg=\"dark\" className=\"m-0 p-1\">\n                <Card.Header className=\"bg-dark p-1 text-center text-info\"><h4>Stake Summary</h4></Card.Header>\n                <Card.Body className=\"bg-dark p-1 rounded\">\n                    <Row>\n                        <Col className=\"text-right font-weight-bold\">Staked</Col>\n                        <Col><CryptoVal className=\"numeric\" value={stakedTotal} showUnit /></Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-right font-weight-bold\">Shares</Col>\n                        <Col><CryptoVal className=\"numeric\" value={sharesTotal.times(1e8)} /></Col>\n                    </Row>\n                    { bigPayDayTotal.gt(0) &&\n                    <Row>\n                        <Col className=\"text-right font-weight-bold\">\n                            <span className=\"text-info\">Big</span>\n                            <span className=\"text-warning\">Pay</span>\n                            <span className=\"text-danger\">Day</span>\n                        </Col>\n                        <Col><CryptoVal className=\"numeric\" value={bigPayDayTotal} showUnit /></Col>\n                    </Row>\n                    }\n                    <Row>\n                        <Col className=\"text-right font-weight-bold\">Interest</Col>\n                        <Col><CryptoVal className=\"numeric\" value={interestTotal} showUnit /></Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-right font-weight-bold\">Total Value</Col>\n                        <Col><CryptoVal \n                                className=\"numeric font-weight-bold\" \n                                value={stakedTotal.plus(bigPayDayTotal).plus(interestTotal)} showUnit />\n                        </Col>\n                    </Row>\n                    <Row className=\"text-success\">\n                        <Col className=\"text-success text-right font-weight-bold\">USD Value</Col>\n                        <Col className=\"text-success numeric font-weight-bold\">{ \"$\"+format(\",.2f\")( stakedTotal.plus(interestTotal).div(1E8).times(this.props.usdhex).toNumber() )}</Col>\n                    </Row>\n                    <Row className=\"mt-2\">\n                        <Col className=\"text-right font-weight-bold\">Average Gain</Col>\n                        <Col className=\"numeric\">{averagePercentGain.toFixed(2)}%</Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-right font-weight-bold\">Average APY</Col>\n                        <Col>{averagePercentAPY.toFixed(2)}%</Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </>\n        )\n    }\n\n    sortPastStakesStateByField = (keyField) => {\n        const { keyField:oldKey, dir:oldDir } = this.state.pastStakesSortKey\n        const dir = (oldKey === keyField) ? -oldDir : -1\n        const pastStakesSortKey = { keyField, dir }\n        this.setState({\n            pastStakesSortKey,\n            pastStakes: [ ...this.state.pastStakes ].sort((a, b) => {\n                const bn_a = BigNumber(a[keyField])\n                const bn_b = BigNumber(b[keyField])\n                return dir * (bn_a.lt(bn_b) ? -1 : bn_a.gt(bn_b) ? 1 : 0)\n            })\n        })\n    }\n\n    StakesHistory = () => {\n        const { pastStakes } = this.state || null\n        if (!pastStakes) return ( <>loading</> )\n\n        const handleSortSelection = (e) => {\n            e.preventDefault()\n            e.stopPropagation()\n            const hash = e.target.closest('a').hash\n            const keyField = hash.match(/sort_(.+)$/)[1] || null\n            debug('keyField: ', keyField)\n            keyField && this.sortPastStakesStateByField(keyField)\n        }\n\n        return (\n            <Container className=\"p-0 row-highlight-even\">\n                <Row className=\"p-0 my-2 mx-0 xs-small text-right font-weight-bold\">\n                    <Col xs={2} sm={2} className=\"p-0 text-center\">\n                        <a href=\"#sort_servedDays\" onClick={handleSortSelection}>\n                            Days<span className=\"d-none d-md-inline\"> Served</span>\n                        </a>\n                    </Col>\n                    <Col xs={3} sm={3} className=\"p-0\">\n                        <a href=\"#sort_stakedHearts\" onClick={handleSortSelection}>\n                            Stake<span className=\"d-none d-sm-inline\">d Amount</span>\n                        </a>\n                    </Col>\n                    <Col xs={3} sm={3} className=\"p-0\"><a href=\"#sort_stakeShares\" onClick={handleSortSelection}>Shares</a></Col>\n                    <Col xs={3} sm={3} className=\"p-0\"><a href=\"#sort_penalty\" onClick={handleSortSelection}>Penalty</a></Col>\n                </Row>\n            {pastStakes && pastStakes.map(stake => {\n                return (\n                    <Row key={stake.stakeId} className=\"p-0 m-0 xs-small text-right\">\n                        <Col xs={2} sm={2} className=\"p-0 text-center\">{stake.servedDays}</Col>\n                        <Col xs={3} sm={3} className=\"p-0\"><CryptoVal className=\"numeric\" value={stake.stakedHearts} showUnit /></Col>\n                        <Col xs={3} sm={3} className=\"p-0\"><CryptoVal className=\"numeric\" value={stake.stakeShares.times(1e8)} /></Col>\n                        <Col xs={3} sm={3} className=\"p-0\"><CryptoVal className=\"numeric\" value={stake.penalty} showUnit /></Col>\n                    </Row>\n                )\n            })\n            }\n            </Container>\n        )\n    }\n\n    render() { // class Stakes\n        const { currentDay } = this.props.contract.Data\n        \n        const handleClose = () => this.setState({ showExitModal: false })\n\n        const thisStake = this.state.stakeContext // if any\n        const IsEarlyExit = (thisStake.stakeId && currentDay < (thisStake.lockedDay + thisStake.stakedDays)) \n\n        return (\n            !this.state.stakeList\n                ? <ProgressBar variant=\"secondary\" animated now={90} label=\"loading contract data\" className=\"mt-3\" />\n                : <> \n            <Accordion \n                id='stakes_accordion'\n                className=\"text-left\"\n                defaultActiveKey={this.state.selectedCard}\n            >\n            {!this.props.publicAddress &&\n                <Card bg=\"dark\" text=\"light pt-0\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"new_stake\">\n                        <BurgerHeading className=\"float-left\">New Stake</BurgerHeading>\n                        <div className=\"float-right pr-1 text-success\">\n                             <span className=\"text-muted small\">AVAILABLE </span>\n                             <CryptoVal className=\"numeric font-weight-bold\" value={this.props.wallet.balance} showUnit />\n                        </div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"new_stake\">\n                        <Card.Body className=\"new-stake-body\">\n                            <NewStakeForm \n                                contract={window.contract} \n                                wallet={this.props.wallet} \n                                reloadStakes={this.loadAllStakes}\n                            />\n                        </Card.Body>\n                   </Accordion.Collapse>\n                </Card>\n            }\n                <Card bg=\"secondary\" text=\"light\" className={this.props.className}>\n                {this.props.publicAddress && <div class=\"px-1 small text-muted\">{this.props.publicAddress}</div>}\n                    <Accordion.Toggle as={Card.Header} eventKey=\"current_stakes\">\n                        <BurgerHeading>Active Stakes</BurgerHeading>\n                        <div className=\"float-right pr-1 text-success\">\n                            <span className=\"text-muted small mr-1\">USD</span>\n                            <span className=\"numeric h2 font-weight-bold\">\n                                { \"$\"+format(\",.2f\")(this.state.totalValue.idiv(1E8).times(this.props.usdhex).toNumber())}\n                            </span>\n                        </div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"current_stakes\">\n                        <Card.Body className=\"active-stakes-body\">\n                            <this.StakesList/>\n                        </Card.Body>\n                   </Accordion.Collapse>\n                </Card>\n                <Card bg=\"secondary\" text=\"light pb-0\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"stake_history\">\n                        <BurgerHeading>Stake History</BurgerHeading>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"stake_history\">\n                        <Card.Body className=\"stake-history-body\">\n                            <this.StakesHistory />\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n\n            <Modal show={this.state.showExitModal} onHide={handleClose} animation={false} variant=\"primary\">\n                <Modal.Header closeButton>\n                    <Modal.Title>End Stake</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    { IsEarlyExit \n                        ?  \n                            <Alert variant=\"danger\">\n                                <Alert.Heading>LOSSES AHEAD</Alert.Heading>\n                                <p>\n                                    Exiting stakes early can lead to <em>significant</em> losses!\n                                </p>\n                                <hr />\n                                <p>\n                                    <Alert.Link href=\"#\">Learn more</Alert.Link>\n                                </p>\n                            </Alert>\n                        :\n                            <Alert variant=\"success\">\n                                <Alert.Heading>Term Complete</Alert.Heading>\n                                <p>\n                                    This stake has served its full term and is safe to exit.\n                                </p>\n                                <p> TODO: add stake stats / yield etc </p>\n                            </Alert>\n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                    { IsEarlyExit \n                        ? <div>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Accept Penalty\n                            </Button>\n                            <Button variant=\"primary\" className=\"ml-3\" onClick={handleClose}>\n                                Get me outta here!\n                            </Button>\n                        </div>\n                        : <Button variant=\"primary\" onClick={handleClose}>End Stake</Button>\n                    }\n                </Modal.Footer>\n            </Modal>\n            </>\n        )\n    }\n}\n\nexport default Stakes\n","import React from 'react'\nimport { \n    Card, Accordion,\n} from 'react-bootstrap'\nimport { BurgerHeading } from './Widgets'\nimport './Stats.scss'\nimport HEX from './hex_contract'\nimport { ResponsiveContainer, Area, AreaChart, Line, LineChart, CartesianGrid, XAxis, YAxis } from 'recharts'\nconst { format } = require('d3-format')\nconst axios = require('axios').create({\n    baseURL: '/',\n    timeout: 3000,\n    headers: { \"Content-Type\": \"application/json\", \"Accept\": \"applicaiton/json\"},\n});\n\nconst debug = require('debug')('Stats')\n\nclass Stats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            TShareRates: [],\n            UNIv2usdhex: []\n        }\n    }\n\n    updateUsdTsrGraph() {\n        const { currentDay } = this.props.contract.Data\n        const getTsrChunk = (chunk) => {\n            return new Promise((resolve, reject) => { \n                axios.post('https://api.thegraph.com/subgraphs/name/codeakk/hex', \n                    JSON.stringify({ \n                        query: `{\n                            shareRateChanges(\n                                first: 1000, skip: ${chunk * 1000}\n                                orderBy: timestamp,\n                                orderDirection: desc,\n                            ) {\n                                id\n                                timestamp\n                                shareRate\n                            }\n                        }` \n                    }),\n                )\n                .then(response => {\n                    debug(\"response: \", response)\n                    resolve(response.data.data.shareRateChanges)\n                })\n                .catch(e => {\n                    debug('Stats: tsrData error: ', e)\n                })\n            })\n        }\n        Promise.all([\n            getTsrChunk(0),\n        ]).then(results => {\n            const tsrData = results.flat()\n            //debug('tsrData.length:', tsrData.length)\n            //debug('tsrData: %o', tsrData)\n            const tsrMap = { }\n            let tsrPrevious = 0\n            tsrData.forEach(e => {\n                const { shareRate, timestamp } = e\n                const tsrDay = Math.floor((timestamp - HEX.START_TIMESTAMP) / (24*3600)) \n                if (tsrDay !== tsrPrevious) {\n                    tsrPrevious = tsrDay\n                    tsrMap[tsrDay] = Number(shareRate) / 10\n                }\n            })\n            //debug('tsrMap: %o', tsrMap)\n            \n            const TShareRates = [ ]\n            for (let day=3; day<=currentDay; day++) {\n                const tsr = tsrMap[day] || tsrPrevious\n                tsrPrevious = tsr\n                TShareRates.push({ day, tsr})\n            }\n            this.setState({ TShareRates })\n        })\n        .catch(e => {\n            debug(`Graph API: ${e.message}`)\n            this.setState({ graphIconClass: \"icon-error-bg\" })\n        })\n    }\n\n    updateUNIv2Graph() {\n        const pastNinety = Math.floor(Number(new Date()/1000))-90*24*3600\n        const getUniPriceData = (chunk) => {\n            return new Promise((resolve, reject) => {\n                axios.post('https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2', \n                    JSON.stringify({ \n                        query: \n                        `{\n                            tokenDayDatas (\n                                first: 1000, skip: ${chunk * 1000}\n                                where: {\n                                    token:\"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39\",\n                                    date_gt: ${pastNinety}\n                                }\n                                orderBy: date\n                                orderDirection: asc\n                            ) {\n                                id\n                                date\n                                priceUSD\n                            }\n                        }` \n                    })\n                )\n                .then(response => {\n                    const priceData = response.data.data.tokenDayDatas\n                    //debug('priceData: %o', priceData)\n                    const UNIv2usdhex = priceData.map(e => {\n                        const { priceUSD, date } = e\n                        const usd = Number(priceUSD) \n                        const day = Math.floor((date - HEX.START_TIMESTAMP) / (24*3600)) \n                        return { day, usd }\n                    })\n                    resolve(UNIv2usdhex)\n                })\n                .catch(e => {\n                    debug('Stats: UNIv2usdhex error: ', e)\n                })\n            })\n        }\n        Promise.all([\n            getUniPriceData(0),\n        ]).then(results => {\n            const UNIv2usdhex = results.flat()\n            this.setState({ UNIv2usdhex })\n        })\n    }\n\n    componentDidMount() {\n        this.updateUsdTsrGraph()\n        this.updateUNIv2Graph()\n    }\n\n    render() {\n        const { TShareRates, UNIv2usdhex } = this.state\n        const formatter = (val) => {\n            return format(\",d\")(val)\n        }\n        const usdFormatter = (val) => {\n            return format(\",.2f\")(val)\n        }\n\n        return (\n            <Accordion \n                id='stats_accordion'\n                className=\"text-left mt-3\"\n                defaultActiveKey=\"0\"\n            >\n                <Card id=\"stats\" text=\"light py-0\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                        <BurgerHeading className=\"float-left\">Stats</BurgerHeading>\n                        <div className=\"float-right pr-1 text-danger\">\n                             <span className=\"text-muted small mr-1\">T-Share Price USD</span>\n                             <span className=\"numeric\">{ \"$\"+format(\",.0f\")(this.props.usdhex * this.props.contract.Data.globals.shareRate.div(10)) }</span>\n                        </div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body>\n                            <h4 className=\"text-center mt-2\">T-Share HEX Price by Day</h4>\n                            <ResponsiveContainer width=\"100%\" height={200}>\n                                <AreaChart width={730} height={250} data={TShareRates}\n                                    margin={{ top: 10, right: 0, left: 30, bottom: 0 }}>\n                                    <defs>\n                                        <linearGradient id=\"colorTsr\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                        <stop offset=\"10%\" stopColor=\"#ee00cc\" stopOpacity={0.5}/>\n                                        <stop offset=\"60%\" stopColor=\"#ff9900\" stopOpacity={0.6}/>\n                                        <stop offset=\"95%\" stopColor=\"#ffee00\" stopOpacity={0.5}/>\n                                        </linearGradient>\n                                    </defs>\n                                    <XAxis dataKey=\"day\" />\n                                    <YAxis type=\"number\" orientation=\"right\" domain={[ 10000, dataMax => ((Math.round(dataMax / 2000)+1) * 2000) ]} tickFormatter={formatter} />\n                                    <CartesianGrid stroke=\"#ffffff22\" strokeDasharray=\"3 3\" />\n                                    <Area type=\"monotone\" dataKey=\"tsr\" stroke=\"#ffffff55\" fillOpacity={1} fill=\"url(#colorTsr)\" />\n                                </AreaChart>\n                            </ResponsiveContainer>\n                            <h4 className=\"text-center mt-3\">90 Day USD/HEX</h4>\n                            <ResponsiveContainer width=\"100%\" height={200}>\n                                <LineChart width={730} height={250} data={UNIv2usdhex}\n                                    margin={{ top: 10, right: 0, left: 30, bottom: 0 }}>\n                                    <XAxis dataKey=\"day\" />\n                                    <YAxis type=\"number\" orientation=\"right\" domain={[ 0, dataMax => (dataMax * 1.5) ]} tickFormatter={usdFormatter} />\n                                    <CartesianGrid stroke=\"#ffffff22\" strokeDasharray=\"3 3\" />\n                                    <Line type=\"linear\" dataKey=\"usd\" strokeWidth={2} dot={false} stroke=\"#ee00aa\" />\n                                </LineChart>\n                            </ResponsiveContainer>\n                        </Card.Body>\n                   </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        )\n    }\n}\n\nexport default Stats\n","import React from 'react'\nimport { \n    Container,\n    Row, Col,\n    Card,\n    Form,\n    ProgressBar,\n    Accordion\n} from 'react-bootstrap'\nimport './Stakes.scss'\nimport HEX from './hex_contract'\nimport { BigNumber } from 'bignumber.js'\nimport { CryptoVal, BurgerHeading, VoodooButton } from './Widgets' \nimport BitSet from 'bitset'\nimport Timer from 'react-compound-timer'\nimport crypto from 'crypto'\n\nconst debug = require('debug')('Lobby')\n\nclass Lobby extends React.Component {\n    constructor(props) {\n        super(props)\n        this.eventLog = { }\n        this.state = {\n            historyDataReady: false,\n            error: null,\n            dailyDataCount: 0,\n            lobbyData: null, // no mutations\n            lobbyDataUI: null, // sorted for UI display\n            pastEntries: { },\n            entryETH: '', // form input value\n            todayAvailableHEX: '---',\n            todayPendingETH: '---',\n            HEXperETH: '---',\n            todayYourHEXPending: '---',\n            todayYourEntriesRawTotal: '---',\n            unmintedEntries: [ ],\n            lobbySortKey: { keyField: '', dir: -1 },\n            walletETHBalance: new BigNumber(0)\n        }\n        window._LOBBY = this // DEBUG REMOVE ME\n    }\n\n    addToEventLog = (entry) => {\n        const hash = crypto.createHash('sha1').update(JSON.stringify(entry)).digest('hex')\n        if (this.eventLog[hash]) return false\n        this.eventLog[hash] = entry\n        return true\n    }\n\n    unsubscribeEvents = () => {\n        try {\n            this.web3.eth.clearSubscriptions()\n        } catch(e) {}\n    }\n    \n    handleSubscriptionError = (e, r) => {\n        debug(\"subscription error: \", e)\n    }\n    \n    subscribeEvents = () => {\n        this.props.contract.events.XfLobbyEnter( {filter:{memberAddr:this.props.wallet.address}}, async (e, r) => {\n            if (e) { \n                debug('ERR: events.XfLobbyEnter:', e) \n                return\n            }\n            if (r && !this.addToEventLog(r)) return\n            this.getToday()\n        })\n        .on('connected', (id) => debug('subbed: XfLobbyEnter:', id))\n        .on('error', this.handleSubscriptionError)\n    }\n    \n    getDayEntries = (day, address) => {\n        const { contract } = this.props\n        return new Promise((resolveEntries, reject) => {\n            contract.methods.xfLobbyMembers(day, address).call()\n            .then(entryIndexes => {\n                const { headIndex, tailIndex } = entryIndexes\n\n                // let's NOT use Promise.all ... (reasons)\n                var entries = [ ]\n                if (Number(tailIndex) === 0) return resolveEntries(entries)\n                for (let entryIndex = 0; entryIndex < tailIndex; entryIndex++) {\n                    const entryId = BigNumber(day).times(BigNumber(2).pow(40)).plus(entryIndex).toString()\n                    // eslint-disable-next-line\n                    contract.methods.xfLobbyEntry(address, entryId).call({from: address}, (err, entry) => {\n                        let newEntry = [ ]\n                        if (err) {\n                            debug('getDayEntries:: WARNING: day %d, entryId:%s : %s', day, entryId, err)\n                        } else {\n                            newEntry = {\n                                rawAmount: BigNumber(entry.rawAmount),\n                                referrerAddr: entry.referrerAddr,\n                            }\n                        }\n                        entries = entries.concat(newEntry)\n                        if (entries.length === Number(tailIndex)) {\n                            if (day < contract.Data.currentDay) {\n                                if (headIndex <= entryIndex) {\n                                    this.setState({ \n                                        unmintedEntries: this.state.unmintedEntries.concat({ day, entries})\n                                    })\n                                }\n                            }\n                            resolveEntries(entries)\n                        }\n                    })\n                }\n            })\n            .catch(e => debug('getDayEntries:: ERROR: ', e))\n       })\n    }\n\n    calcEntryTotals = (entries, availableHEX=null, totalETH=null) => {\n        let rawEntriesTotal = BigNumber(0)\n        let entriesTotal = BigNumber(0)\n        let mintedHEXTotal = BigNumber(0)\n        let potentialHEXTotal = BigNumber(0)\n        entries && entries.forEach(entry => { \n            let amountETH = entry.rawAmount\n            rawEntriesTotal = rawEntriesTotal.plus(amountETH)\n            if (entry.referrerAddr.slice(0, 2) === '0x') {\n                amountETH = amountETH.times(1.10)\n                if (entry.referrerAddr.toLowerCase() === this.props.wallet.address.toLowerCase())\n                    amountETH = amountETH.times(1.20) // clever person in the house! :p\n            }\n            entriesTotal = entriesTotal.plus(amountETH)\n            if (entry.mintedHEX) mintedHEXTotal = mintedHEXTotal.plus(entry.mintedHEX)\n        })\n        if (availableHEX !== null && totalETH !== null) {\n            potentialHEXTotal = entriesTotal.times(availableHEX).idiv(totalETH)\n        }\n        return {\n            potentialHEXTotal,\n            mintedHEXTotal,\n            rawEntriesTotal,\n            entriesTotal\n        }\n    }\n\n    getToday = () => {\n        const { contract, wallet } = this.props\n        const { currentDay } = this.props.contract.Data\n        Promise.all([\n            contract.methods.xfLobby(currentDay).call(),            // [0] global ETH entered today (total pending)\n            this.getDayEntries(currentDay, wallet.address),         // [1] our ETH entries for current day (total no. pending)\n        ]).then(results => {\n            const todayPendingETH  = BigNumber(results[0])\n            const todayYourEntries = results[1]\n            const totalUnclaimedSatoshis = contract.Data.globals.claimStats.unclaimedSatoshisTotal\n            const todayAvailableHEX = totalUnclaimedSatoshis.div(350).times(HEX.HEARTS_PER_SATOSHI) \n            const { \n                rawEntriesTotal:todayYourEntriesRawTotal, \n                entriesTotal:todayYourEntriesTotal\n            } = this.calcEntryTotals(todayYourEntries)\n            const HEXperETH = todayAvailableHEX.div(todayPendingETH.div(1e18))\n            const todayYourHEXPending = todayYourEntriesTotal.div(todayPendingETH).times(todayAvailableHEX)\n    \n            this.setState({\n                todayPendingETH,\n                todayAvailableHEX,\n                HEXperETH: HEXperETH,\n                todayYourHEXPending,\n                todayYourEntriesRawTotal\n            })\n        })\n        .catch(e => debug('getToday:: ERROR: ', e))\n    }\n\n    getPastLobbyEntries = () => {\n        /*  returns array of objects <= [ \n                { \n                    <day>: [ \n                        {\n                            rawAmount<BigNumber>,\n                            referrerAddr<BigNumber>,\n                            mintedHEX<BigNumber>\n                        }\n                    ]\n                } \n            ]\n        */\n        return new Promise((resolvePastEntries, reject) => {\n            const { contract, wallet } = this.props\n            let entries = { }\n            contract.getPastEvents('XfLobbyEnter',{ \n                fromBlock: 'earliest', \n                filter: { memberAddr: wallet.address }\n            }).then(results => {\n                results.forEach(d => {\n                    const r = d.returnValues\n                    const day = BigNumber(r.entryId).idiv(BigNumber(2).pow(40)).toString()\n                    const entryNum = BigNumber(r.entryId).mod(BigNumber(2).pow(40)).toNumber()\n                    const entriesCopy = { ...entries }\n                    const dayEntriesCopy = entriesCopy[day] ? [ ...entriesCopy[day] ] : [ ]\n                    dayEntriesCopy[entryNum] = { \n                        rawAmount: BigNumber(r.data0).idiv(BigNumber(2).pow(40)),\n                        referrerAddr: r.referrerAddr \n                    }\n                    entriesCopy[day] = dayEntriesCopy\n                    entries = entriesCopy \n                })\n                contract.getPastEvents('XfLobbyExit',{ \n                    fromBlock: 'earliest', \n                    filter: { memberAddr: wallet.address }\n                }).then(results => {\n                    results.forEach(d => {\n                        const r = d.returnValues\n                        const day = BigNumber(r.entryId).idiv(BigNumber(2).pow(40)).toString()\n                        const entryNum = BigNumber(r.entryId).mod(BigNumber(2).pow(40)).toNumber()\n                        const entriesCopy = { ...entries }\n                        let dayEntriesCopy = entriesCopy[day] ? [ ...entriesCopy[day] ] : [ ]\n                        dayEntriesCopy[entryNum].mintedHEX = BigNumber(r.data0).idiv(BigNumber(2).pow(40))\n                        entriesCopy[day] = dayEntriesCopy\n                        entries = entriesCopy\n                    })\n                    resolvePastEntries(entries)\n                })\n            })\n        })\n    }\n\n    getHistory = () => {\n        const { contract, wallet } = this.props\n        const dailyDataCount  = Math.min(HEX.CLAIM_PHASE_END_DAY, contract.Data.globals.dailyDataCount.toNumber())\n\n        if (!wallet.address || wallet.address === '') return debug('Lobby::address invalid')\n        Promise.all([\n            contract.methods.dailyDataRange(0, dailyDataCount).call(),  // [0] for unclaimedSatoshisTotal from each day in range\n            contract.methods.xfLobbyRange(0, dailyDataCount).call(),    // [1] total ETH from each day in range\n            this.getPastLobbyEntries(),                                 // [2] lobby entries history from XfLobbyEnter/Exit event log\n            contract.methods.xfLobbyPendingDays(wallet.address).call(), // [3] bit vector of days; 1 == we have entires that day\n        ]).then(results => {\n            const lobbyDailyData        = results[0]\n            const lobbyDailyETH         = results[1]\n            const pastEntries           = results[2]\n            const hasPendingEntryThisDay = new BitSet(\n                BigNumber(results[3][1]).toString(2) +\n                BigNumber(results[3][0]).toString(2)\n            )\n\n            new Promise((resolveLobby, reject) => {\n                Promise.all(lobbyDailyData.map((mappedDayData, day) => { // returns array of lobby day promises\n                    return new Promise(async (resolveDay, reject) => {\n                        const hexa = BigNumber(mappedDayData).toString(16).padStart(64, '0')\n                        const unclaimedSatoshisTotal = BigNumber(hexa.slice(12,28), 16)\n                        const availableHEX = (day === 0) ? BigNumber(1e13) : unclaimedSatoshisTotal.div(350).times(HEX.HEARTS_PER_SATOSHI)\n                        const totalETH = BigNumber(lobbyDailyETH[day])\n                        const HEXperETH = availableHEX.div(totalETH.div(1e18))\n\n                        let entries = null\n                        if (hasPendingEntryThisDay.get(day))\n                            entries = await this.getDayEntries(day, wallet.address)\n                        else\n                            entries = pastEntries[day]\n                        const {\n                            mintedHEXTotal,\n                            rawEntriesTotal\n                        } = this.calcEntryTotals(entries)\n\n                        resolveDay({\n                            day,\n                            availableHEX,\n                            totalETH,\n                            entries,\n                            HEXperETH,\n                            mintedHEXTotal,\n                            rawEntriesTotal\n                        })\n                    })\n                }))\n                .then(days => resolveLobby(days))\n                .catch(e => reject(e))\n            })\n            .then(lobbyData => {\n                this.setState({\n                    dailyDataCount,\n                    lobbyData,\n                    lobbyDataUI: lobbyData,\n                    pastEntries,\n                    historyDataReady: true\n                }, () => this.sortLobbyDataStateByField('day'))\n            })\n            .catch(e => debug('Lobby::getHistory ERR: ', e))\n        })\n    }\n\n    componentDidMount = () => {\n        this.getToday()\n        this.getHistory() // state.lobbyData\n        this.subscribeEvents()\n    }\n\n    componentWillUnmount = () => {\n        this.unsubscribeEvents()\n    }\n\n    resetFormAndReload = async () => {\n        await this.setState({ \n            unmintedEntries: [ ],\n            entryHEX: '' \n        })\n        this.getToday()\n    }\n\n    sortLobbyDataStateByField = (keyField) => {\n        const { keyField:oldKey, dir:oldDir } = this.state.lobbySortKey\n        const dir = (oldKey === keyField) ? -oldDir : -1\n        const lobbySortKey = { keyField, dir }\n        this.setState({\n            lobbySortKey,\n            lobbyDataUI: [ ...this.state.lobbyData ].sort((a, b) => {\n                const bn_a = BigNumber(a[keyField])\n                const bn_b = BigNumber(b[keyField])\n                return dir * (bn_a.lt(bn_b) ? -1 : bn_a.gt(bn_b) ? 1 : 0)\n            })\n        })\n    }\n\n    render() {\n        const { currentDay } = this.props.contract.Data\n\n        const handleSortSelection = (e) => {\n            e.preventDefault()\n            e.stopPropagation()\n            const hash = e.target.closest('a').hash\n            const keyField = hash.match(/sort_(.+)$/)[1] || null\n            keyField && this.sortLobbyDataStateByField(keyField)\n        }\n\n        const LobbyDays = () => {\n            if (!this.state.historyDataReady) {\n                if (this.state.error) {\n                    debug('ERROR: ', this.state.error)\n                    return ( <div className=\"text-center\">error :/</div> )\n                } else \n                    return ( <div className=\"text-center\">loading ...</div> )\n            }\n\n            const lobbyData = this.state.lobbyDataUI\n            return (\n                <Container className=\"pl-0 pr-3 row-highlight-even\">\n                    <p className=\"text-center\"><b>Transform History</b></p>\n                    <Row key=\"header\" className=\"py-0 mx-0 xs-small align-items-end\">\n                        <Col xs={1} sm={1} className=\"p-0\"><a href=\"#sort_day\" onClick={handleSortSelection}>Day</a></Col>\n                        <Col xs={3} sm={2} className=\"p-0\"><a href=\"#sort_availableHEX\" onClick={handleSortSelection}>Available</a></Col>\n\n                        <Col        sm={2} className=\"px-0 d-none d-sm-inline\"><a href=\"#sort_totalETH\" onClick={handleSortSelection}>ETH</a></Col>\n                        <Col        sm={2} className=\"px-0 d-none d-sm-inline\">\n                            <a href=\"#sort_HEXperETH\" onClick={handleSortSelection}>\n                                <span className=\"d-sm-inline d-md-none\"><sup>HEX</sup>/<sub>ETH</sub></span>\n                                <span className=\"d-sm-none d-md-inline\">HEX/ETH</span>\n                            </a>\n                        </Col>\n\n                        <Col xs={4} sm={2} className=\"px-2\">\n                            <a href=\"#sort_mintedHEXTotal\" onClick={handleSortSelection}>\n                                <span className=\"d-inline d-sm-inline d-md-none\">Ur HEX</span>\n                                <span className=\"d-none d-md-inline\">Your HEX</span>\n                            </a>\n                        </Col>        \n                        <Col xs={4} sm={3} className=\"p-0\"><a href=\"#sort_rawEntriesTotal\" onClick={handleSortSelection}>Your ETH</a></Col>\n                    </Row>\n                    { lobbyData.map(dayData => { \n                        const { day, availableHEX, totalETH, HEXperETH, mintedHEXTotal, rawEntriesTotal } = dayData\n\n                        return (\n                            <Row key={day} className={\"py-0 mx-0 xs-small\"+(rawEntriesTotal.gt(0) ? \" text-success\" : \"\")}>\n                                <Col xs={1} sm={1} className=\"px-0\">{day+1}</Col>\n                                <Col xs={3} sm={2} className=\"px-0\"><CryptoVal value={availableHEX} /></Col>\n\n                                <Col        sm={2} className=\"px-0 d-none d-sm-inline\"><CryptoVal value={totalETH} currency=\"ETH\" /></Col>\n                                <Col        sm={2} className=\"px-0 d-none d-sm-inline\"><CryptoVal value={HEXperETH} /></Col>\n\n                                <Col xs={4} sm={2} className=\"px-2\"><CryptoVal value={mintedHEXTotal} /></Col>\n                                <Col xs={4} sm={3} className=\"px-0\"><CryptoVal value={rawEntriesTotal} currency=\"ETH\" showUnit /></Col>\n                            </Row>\n                        )\n                    }) }\n                </Container>\n            )\n        }\n\n        const HeaderDetail = () => {\n            const epocHour = new Date(HEX.START_DATE).getUTCHours() // should convert to local time\n            const now = new Date(Date.now())\n            const nextEpoc = new Date(now)\n            nextEpoc.setUTCHours(epocHour)\n            nextEpoc.setMinutes(0)\n            nextEpoc.setSeconds(0)\n            if (nextEpoc < now) nextEpoc.setUTCDate(nextEpoc.getUTCDate()+1) // NOTE: \"Date\" meqns \"day of month\", here\n            const timerStart = nextEpoc - now\n\n            return (\n                <Container>\n                    <Row>\n                        <Col className=\"text-right\"> \n                            <strong>Day</strong>{' '}\n                            <span className=\"text-info\">{currentDay+1}</span>\n                            <span className=\"text-muted\">/351</span>\n                        </Col>\n                        <Col>\n                            <div className=\"float:right\">\n                                <Timer\n                                    initialTime={timerStart}\n                                    direction=\"backward\"\n                                >\n                                {() => \n                                    <>\n                                        <small>closing</small>{' '}\n                                        <Timer.Hours formatValue={value => value.toString().padStart(2, '0') } />:\n                                        <Timer.Minutes formatValue={value => value.toString().padStart(2, '0') } />:\n                                        <Timer.Seconds formatValue={value => value.toString().padStart(2, '0') } />\n                                    </>\n                                }\n                                </Timer>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-right\"><strong>Available </strong></Col>\n                        <Col> <CryptoVal value={this.state.todayAvailableHEX} showUnit /></Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-right\"><strong>Total Entries</strong></Col>\n                        <Col> <CryptoVal value={this.state.todayPendingETH} currency=\"ETH\" showUnit /> </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-right\"><strong>HEX/ETH</strong></Col>\n                        <Col> <CryptoVal value={this.state.HEXperETH} showUnit /> </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-right\"><strong>Your HEX</strong></Col>\n                        <Col> <CryptoVal value={this.state.todayYourHEXPending} showUnit /></Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-right\"><strong>Your ETH</strong></Col>\n                        <Col> <CryptoVal value={this.state.todayYourEntriesRawTotal} currency=\"ETH\" showUnit /></Col>\n                    </Row>\n                </Container>\n\n            )\n        }\n\n        const handleAmountChange = (e) => {\n            e.preventDefault()\n            e.stopPropagation()\n            this.setState({\n                entryETH: e.target.value\n            })\n        }\n\n        return (\n            <Accordion id=\"lobby_accordion\" className=\"my-3\" >\n                <Card bg=\"secondary\" text=\"light rounded pb-0\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                        <BurgerHeading>Transform<span className=\"d-none d-sm-inline\"> (AA Lobby)</span></BurgerHeading>\n                        <div className=\"float-right pr-1 text-success\">\n                        { HEX.lobbyIsActive() ? \n                            <> \n                                <span className=\"text-muted small\">AVAILABLE </span>\n                                <strong><CryptoVal value={this.props.wallet.balanceETH} currency=\"ETH\" showUnit /></strong>\n                            </> : <> \n                                <span className=\"text-muted small\">CLOSED</span> \n                            </>\n                        }\n                        </div>\n                        <Container>\n                            <ProgressBar id=\"lobby\" \n                                min=\"0\" max=\"350\" \n                                now={currentDay+1}\n                                className=\"mb-1\"\n                                variant={currentDay > 263 ? \"danger\" : currentDay > 125 ? \"warning\" : currentDay > 88 ? \"info\" : \"success\"}\n                            />\n                    { HEX.lobbyIsActive() && <>\n                            <HeaderDetail />\n                            <Form>\n                                <Row className=\"my-2\">\n                                <Col xs={{ span:5, offset:1 }} sm={{ span:4, offset: 2 }} md={{ span:3, offset: 3 }} className=\"text-right\">\n                                    <Form.Control\n                                        type=\"number\"\n                                        placeholder=\"ETH amount\"\n                                        value={this.state.entryETH}\n                                        aria-label=\"amount of ETH forthis lobby entry\"\n                                        aria-describedby=\"basic-addon1\"\n                                        onChange={ handleAmountChange }\n                                        onClick={(e) => e.stopPropagation()} \n                                    />\n                                </Col>\n                                <Col xs={6}>\n                                    <VoodooButton\n                                        contract={ window.contract }\n                                        method=\"xfLobbyEnter\" \n                                        params={['0xD30542151ea34007c4c4ba9d653f4DC4707ad2d2'.toLowerCase()/*referrerAddr*/ ]}\n                                        options={{ \n                                            from:this.props.wallet.address, \n                                            value: BigNumber(this.state.entryETH/*string*/).times(1e18) \n                                        }}\n                                        inputValid={ BigNumber(this.state.entryETH).gt(0) }\n                                        confirmationCallback={ this.resetFormAndReload }\n                                        variant=\"lobby btn-enter\"\n                                    >\n                                        ENTER\n                                    </VoodooButton>\n                                </Col>\n                            </Row>\n                        </Form>\n                        {this.state.historyDataReady === true && this.state.unmintedEntries.length > 0 && \n                        <Container className=\"p-3 text-center\">\n                            <h4>Exit Previous Days</h4>\n                            <p>Tap each <span className=\"text-success\"><b>MINT</b></span> below to get your HEX...</p>\n                            {this.state.unmintedEntries.map(data => {\n                                const { day, entries } = data\n                                const { availableHEX, totalETH } = this.state.lobbyData[day]\n                                \n                                const {\n                                    potentialHEXTotal\n                                } = this.calcEntryTotals(\n                                    this.state.pastEntries[day],\n                                    availableHEX,\n                                    totalETH\n                                )\n\n                                return (\n                                    <div className=\"text-center m-2\" key={day}>\n                                        <VoodooButton \n                                            contract={window.contract}\n                                            method=\"xfLobbyExit\" \n                                            params={[day, 0]}\n                                            options={{ from: this.props.wallet.address }}\n                                            confirmationCallback={this.resetFormAndReload}\n                                            variant=\"lobby btn-mint\"\n                                            className=\"text-center\"\n                                        >\n                                            <span className=\"text-info text-normal\">\n                                                <small>day {day+1}{entries.length > 1 && <sup>({entries.length} entries)</sup>}</small>\n                                            </span>{' '}\n                                            MINT&nbsp;<CryptoVal value={potentialHEXTotal}showUnit />\n                                        </VoodooButton>\n                                    </div>\n                                )\n                            })}\n                        </Container>\n                        }\n                </> }\n                        </Container>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className=\"bg-dark text-right\"> \n                            <LobbyDays />\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        )\n    }\n}\n\nexport default Lobby\n","import React from 'react'\nimport { \n    Container,\n    Row,\n    Col,\n    Image\n} from 'react-bootstrap'\n\nconst Blurb = () => {\n    return (\n        <Container fluid id=\"mobile_devices\" className=\"bg-light text-dark rounded p-3 my-3 overflow-hidden text-left\">\n            <Container fluid className=\"my-3\" id=\"mobile_trust_wallet\">\n                <Row>\n                    <Col className=\"text-center\">\n                        {\n                            window.location.hostname === \"go.tshare.app\"\n                            ? <h3 className=\"text-muted\">go.TShare.app</h3>\n                            : <h3 className=\"text-muted\">HEX<sup>mob.win</sup></h3>\n                        }\n                        <h3>“a mobile friendly HEX staking interface”</h3>\n                        <p className=\"text-muted\">independent community project</p>\n                    </Col>\n                </Row>\n                <Row className=\"h-100\">\n                    <Col xs={12} sm={5} className=\"text-right\">\n                    <img className=\"d-none d-sm-inline-block\"\n                        style={{ maxWidth: \"90%\", maxHeight: \"320px\" }}\n                        alt=\"HEXmob in Safari using Metamask on iPhone 11\"\n                        src=\"/safari-iphone11.png\"\n                    />\n                    <Image className=\"d-block d-sm-none\"\n                        style={{ maxWidth: \"100%\" }}\n                        alt=\"HEXmob in Safari using Metamask on iPhone 11\"\n                        src=\"/safari-iphone11-cropped.png\"\n                    />\n                    </Col>\n                    <Col xs={12} sm={7} className=\"py-3 text-center m-auto allign-middle\">\n                        <p className=\"m-0\"><small>compatible wallets include ...</small></p>\n                        <p>\n                            <Image src=\"/mm-wordmark.svg\" alt=\"Metamask\" height={96} /><br />\n                            <strong>iOS, Android, MacOS, Linux, Windows</strong><br/>\n                            Safari, Chrome, Firefox, Brave, more\n                        </p>\n                        <p className=\"m-3\">\n                            Trust, Coinbase, Crypto.com, imToken, Portis, Rainbow and any wallet implementing ...\n                        </p>\n                        <h3>\n                            <img width={100} src=\"/walletconnect.svg\" alt=\"\" /> WalletConnect\n                        </h3>\n                    </Col>\n                </Row>\n            </Container>\n        </Container>\n    )\n}\n\nexport default Blurb\n","import React from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport {\n    Accordion,\n  //  Container,\n    Card,\n    Row,\n    Col,\n    Button,\n  //  Badge,\n    ProgressBar\n} from 'react-bootstrap'\nimport { BurgerHeading, CryptoVal } from './Widgets'\nimport './Tewkenaire.scss'\nimport HEX from './hex_contract'\nimport HEX2 from './hex2_contract'\nimport HEX4 from './hex4_contract'\nimport HEX5 from './hex5_contract'\nimport Stakes from './Stakes' // for collecting payout data\nconst debug = require('debug')('Tewk')\n\nclass TewkStakeList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            uiStakeList: null,\n            progressVariant: \"secondary\",\n            progressBar: 0,\n            progressLabel: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        if (!this.props.contractObject) return\n        this.scanTewk()\n    }\n\n    scanTewk = async () => {\n        if (!this.props.contractObject) return false\n        this.setState({\n            progressVariant: \"secondary\",\n            progressLabel: \"fetching data\",\n            pregressBar: 1\n        })\n        const { parent, contractObject, usdhex } = this.props\n        let totalUSD = 0.0\n        const tewkStakes = await this.getTewkenaireStakes(contractObject)\n        const uiStakeList = tewkStakes.map((stake, index) => {\n            const { stakedHearts, stakeShares, payout, bigPayDay } = stake.hex\n            const interest = payout.plus(bigPayDay)\n            const value = stakedHearts.plus(interest)\n            const usd = value.div(1e8).times(usdhex)\n            totalUSD += usd.toNumber()\n            return { stakedHearts, stakeShares, payout, bigPayDay, interest, value, usd }\n        })\n        this.setState({ uiStakeList })\n        parent.setState({ [this.props.contractObject.SYMBOL+'_totalUSD']: totalUSD })\n    }\n\n    getTewkenaireStakes(contractObject) {\n        return new Promise(async (fullResolve, fullReject) => {\n\n            const { chainId, wallet, currentDay } = this.props.parent.props.parent.state\n            const { web3 } = this.props.parent\n            const hexContract = await new web3.eth.Contract(HEX.ABI, HEX.CHAINS[chainId].address)\n            const tewkContract = await new web3.eth.Contract(contractObject.ABI, contractObject.CHAINS[chainId].address)\n            const tewkAddress = contractObject.CHAINS[chainId].address\n            debug(contractObject.SYMBOL+' address: ', tewkAddress)\n\n            let stakeCount = null\n            let playerStats = null\n            var activeStakes = null\n            await Promise.all([\n                hexContract.methods.stakeCount(tewkAddress).call(),\n                tewkContract.methods.playerStats(wallet.address).call()\n            ]).then(results => {\n                [ stakeCount, playerStats ] = results\n                activeStakes = Number(playerStats.activeStakes)\n            })\n\n            debug(contractObject.SYMBOL+' stakeCount: ', stakeCount)\n            debug(contractObject.SYMBOL+' activeStakes: ', activeStakes)\n\n            // Run through HEXMAX's HEX stakeList, searching for stakes that match our wallet.address \n            // (see stakeID+stakeShares sha3 hash, below).\n            // Stop either at the end of the list (ouch!) or when we have found <activeStakes> no. of stakes.\n            // Time to brush up on loops of async functions and atomic array management in JS! :p\n\n            const tewkStakes = []\n            const batchSize = 100\n            let foundCount = 0\n            let fetchedCount = 0\n            const progrssChunkSize = 100 / activeStakes\n            for ( // retrieve HEX stakes in batches of up to <batchSize> ...\n                let batchStart = 0, batchEnd = batchSize-1; \n                batchStart < stakeCount && batchEnd < stakeCount && foundCount < activeStakes; \n                batchStart=batchEnd+1, batchEnd=Math.min(batchEnd+batchSize, stakeCount-1)\n            ) { // get one batch ...\n                debug(contractObject.SYMBOL+': ', batchStart, batchEnd)\n                \n                // eslint-disable-next-line\n                await new Promise((resolve, reject) => {\n                    for (let index = batchStart; index <= batchEnd; index++) {\n                        hexContract.methods.stakeLists(tewkAddress, index).call()\n                        // eslint-disable-next-line\n                        .then(async hexStake => {\n\n                            // UPDATE PROGRESS BAR\n                            const now = Math.floor((foundCount * progrssChunkSize) + (fetchedCount / (stakeCount * activeStakes)) * 100)\n                            this.setState({ progressBar: Math.max(5, now) })\n\n                            fetchedCount++\n                            //debug(\"activeStakes: %d\\tindex: %d\\tfetchedCount:%d\", activeStakes, index, fetchedCount)\n                            if (fetchedCount > batchEnd) return resolve()\n                            const { \n                                stakeId,\n                                stakeShares,\n                            } = hexStake\n                            // 'index' available by closure\n                            const uniqueStakeId = web3.utils.hexToNumberString(web3.utils.soliditySha3(\n                                {\n                                    'type': \"uint40\",\n                                    'value': stakeId\n                                }, {\n                                    'type': \"uint72\",\n                                    'value': stakeShares\n                                })\n                            );\n                            // if (contractObject.SYMBOL === \"HEX4\") debug('uniqueStakeId: ', wallet.address, uniqueStakeId)\n                            // is this stake one of ours?\n                            tewkContract.methods.stakeLists(wallet.address, uniqueStakeId).call()\n                            .then(async tewkStake => {\n                                const { stakeID } = tewkStake\n                                if (stakeID !== \"0\") { // found one of ours                                \n                                    const progress = (currentDay < hexStake.lockedDay) ? 0\n                                    : Math.trunc(Math.min((currentDay - hexStake.lockedDay) / hexStake.stakedDays * 100000, 100000))\n                                    const stakeData = {\n                                        stakeOwner: tewkAddress,\n                                        stakeIndex: index,\n                                        stakeId: hexStake.stakeId,\n                                        lockedDay: Number(hexStake.lockedDay),\n                                        stakedDays: Number(hexStake.stakedDays),\n                                        stakedHearts: new BigNumber(hexStake.stakedHearts),\n                                        stakeShares: new BigNumber(hexStake.stakeShares),\n                                        unlockedDay: Number(hexStake.unlockedDay),\n                                        isAutoStake: Boolean(hexStake.isAutoStakte),\n                                        progress,\n                                        bigPayDay: new BigNumber(0),\n                                        payout: new BigNumber(0),\n                                    }\n                                    // get payout data\n                                    const App = this.props.parent.props.parent\n                                    const {\n                                        bigPayDay,\n                                        interest\n                                    } = await Stakes.getStakePayoutData({ contract: App.contract }, stakeData) \n                                    stakeData.bigPayDay = bigPayDay\n                                    stakeData.payout = interest\n\n                                    const ourStake = {\n                                        hex: stakeData,\n                                        tewk: {\n                                            stakeOwner: wallet.address,\n                                            stakeIndex: index,\n                                            stakeIdParam: stakeID,\n                                            uniqueID: uniqueStakeId,\n                                        }\n                                    }\n                                    debug(contractObject.SYMBOL+' ourStake %d: %o', index, ourStake)\n                                    tewkStakes.push(ourStake)\n                                    foundCount++\n                                    debug(contractObject.SYMBOL+\": found %d of %d\", foundCount, activeStakes)\n                                    if (foundCount === activeStakes) return fullResolve(tewkStakes)\n                                }\n                            })\n                        })\n                        .catch(e => {\n                            debug(\"ERROR: getTewkStakes: \", e.message)\n                            this.setState({\n                                progressVariant: \"danger\",\n                                progressLabel: \"please try again\",\n                                pregressBar: 100\n                            })\n                            return fullReject(null) \n                        })\n                    } // for (batch)\n                }) // await Promise\n            } // for (batches)\n        }) // outer most promise\n    }\n\n    render() {\n        if (this.state.uiStakeList) return (<>\n            <Row className=\"text-right text-muted small pr-3\">\n                <Col className=\"d-none d-md-inline\">PRINCIPAL</Col>\n                <Col>SHARES</Col>\n                <Col className=\"d-none d-md-inline\">BigPayDay</Col>\n                <Col>INTEREST</Col>\n                <Col>VALUE</Col>\n                <Col className=\"text-right\">USD<span className=\"d-none d-md-inline\"> VALUE</span></Col>\n            </Row>\n            {\n                this.state.uiStakeList && this.state.uiStakeList.map((stake, index) => {\n                    const { stakedHearts, stakeShares, bigPayDay, interest, value, usd } = stake\n                    return (\n                        <Row key={'hexmax_'+index} className=\"text-right pr-3\">\n                            <Col className=\"numeric d-none d-md-inline\"><CryptoVal value={stakedHearts} currency=\"HEX\" /></Col>\n                            <Col className=\"numeric\"><CryptoVal value={stakeShares} currency=\"SHARES\" /></Col>\n                            <Col className=\"numeric d-none d-md-inline\"><CryptoVal value={bigPayDay} currency=\"HEX\" /></Col>\n                            <Col className=\"numeric\"><CryptoVal value={interest} currency=\"HEX\" /></Col>\n                            <Col className=\"numeric\"><CryptoVal value={value} currency=\"HEX\" /></Col>\n                            <Col className=\"numeric text-success\">$\n                                <CryptoVal className=\"d-none d-md-inline\" value={usd} currency=\"USD\" />\n                                <CryptoVal className=\"d-md-none d-inline\" value={usd} wholeNumber currency=\"USD\" />\n                            </Col>\n                        </Row>\n                    )\n                })               \n            }\n        </>)\n        else return (<>\n            <ProgressBar variant={this.state.progressVariant} animated now={this.state.progressBar} label={this.state.progressLabel} />\n            {this.state.progressBar <= 100 && \n                <Button \n                    className=\"mt-3\"\n                    variant=\"outline-info\"\n                    size=\"sm\" \n                    block\n                    onClick={this.scanTewk}>{this.state.progressBar === 0 ? \"Scan for Tewkenaire Stakes\" : \"Restart Tewkenaire Stakes Scan\"}\n                </Button>\n            }\n        </>)\n    }\n}\n\nclass Tewkenaire extends React.Component {\n    constructor(props) {\n        super(props)\n        this.provider = props.parent.walletProvider\n        this.web3 = props.parent.web3 \n        this.hexContract = null\n        this.state = {\n            HEX2_totalUSD: 0.0,\n            HEX3_totalUSD: 0.0,\n            HEX4_totalUSD: 0.0,\n            HEX5_totalUSD: 0.0,\n        }\n    }\n\n    async componentDidMount() {\n        window._TEWK = this\n        const { chainId } = this.props.parent.state\n        this.hexContract = await new this.web3.eth.Contract(HEX.ABI, HEX.CHAINS[chainId].address)\n    }\n\n    render() {\n        const handleAccordionSelect = (selectedCard) => {\n        }\n\n        return (<>\n            <Accordion \n                id='tewk_accordion'\n                className=\"text-left mt-3\"\n                onSelect={handleAccordionSelect}\n            >\n                <Card bg=\"secondary\" text=\"light\" className=\"p-0\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"tewkenaire\">\n                        <BurgerHeading>Tewkenaire</BurgerHeading>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"tewkenaire\">\n                        <Card.Body className=\"tewkenaire-body\">\n                            <Card className=\"bg-dark mt-3\">\n                                <Card.Header className=\"pl-1\">\n                                    <Row>\n                                        <Col><em><strong>HEX<span className=\"text-success\">TEW</span></strong></em></Col>\n                                        <Col className=\"text-right text-success\">\n                                            <span className=\"text-muted small mr-1\">USD</span>\n                                            <span className=\"numeric h2\">\n                                                $<strong><CryptoVal value={this.state.HEX2_totalUSD} currency=\"USD\" /></strong>\n                                            </span>\n                                        </Col>\n                                    </Row>\n                                </Card.Header>    \n                                <Card.Body>\n                                    {this.hexContract && <TewkStakeList parent={this} contractObject={HEX2} usdhex={this.props.usdhex} />}\n                                </Card.Body>\n                            </Card>\n                            <Card className=\"bg-dark mt-3\">\n                                <Card.Header className=\"pl-1\">\n                                    <Row>\n                                        <Col><em><strong>HEX<span className=\"text-success\">MAX</span></strong></em></Col>\n                                        <Col className=\"text-right text-success\">\n                                            <span className=\"text-muted small mr-1\">USD</span>\n                                            <span className=\"numeric h2\">\n                                                $<strong><CryptoVal value={this.state.HEX4_totalUSD} currency=\"USD\" /></strong>\n                                            </span>\n                                        </Col>\n                                    </Row>\n                                </Card.Header>\n                                <Card.Body>\n                                    {this.hexContract && <TewkStakeList parent={this} contractObject={HEX4} usdhex={this.props.usdhex} />}\n                                </Card.Body>\n                            </Card>\n                            <Card className=\"bg-dark mt-3\">\n                                <Card.Header className=\"pl-1\">\n                                <Row>\n                                        <Col><em><strong>INFINI<span className=\"text-success\">HEX</span></strong></em></Col>\n                                        <Col className=\"text-right text-success\">\n                                            <span className=\"text-muted small mr-1\">USD</span>\n                                            <span className=\"numeric h2\">\n                                                $<strong><CryptoVal value={this.state.HEX5_totalUSD} currency=\"USD\" /></strong>\n                                            </span>\n                                        </Col>\n                                    </Row>\n                                </Card.Header>\n                                <Card.Body>\n                                    {this.hexContract && <TewkStakeList parent={this} contractObject={HEX5} usdhex={this.props.usdhex} />}\n                                </Card.Body>\n                            </Card>\n                        </Card.Body>\n                   </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </>)\n    }\n}\n\nexport default Tewkenaire\n","import React from 'react'\nimport { \n    Container,\n    Card,\n    Row,\n    Col,\n    Button,\n    Badge,\n    ProgressBar\n} from 'react-bootstrap'\nimport { BigNumber } from 'bignumber.js'\nimport { GitHubInfo } from './Widgets'\nimport Stakes from './Stakes'\nimport Stats from './Stats'\nimport Lobby from './Lobby'\nimport Blurb from './Blurb' \nimport Tewkenaire from './Tewkenaire'\nimport { WhatIsThis, Donaticator, MetamaskUtils } from './Widgets'\nimport HEX from './hex_contract'\nimport UNIV2 from './univ2_contract' /* HEX/USDC pair */\nimport Web3 from 'web3';\nimport Web3Modal, { getProviderInfo } from 'web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider'\n//import Portis from \"@portis/web3\";\nimport { detectTrustWallet } from './util'\nimport './App.scss'\n//const BN = BigNumber\nconst { format } = require('d3-format')\nconst axios = require('axios').create({\n    baseURL: '/',\n    timeout: 3000,\n    headers: { \"Content-Type\": \"application/json\", \"Accept\": \"applicaiton/json\"},\n});\nconst uriQuery = new URLSearchParams(window.location.search)\nif (uriQuery.has('debug')) {\n    const d = uriQuery.get(\"debug\")\n    if (d === \"\") {\n        localStorage.setItem('debug', '*')\n    } else {\n        localStorage.setItem('debug', d)\n    }\n} else {\n    localStorage.removeItem('debug')\n}\nconst debug = require('debug')('App')\n\ndocument.title = (window.location.hostname === \"go.tshare.app\") ? \"HEX Stakes — TShare.app\" : \"HEXmob™ — The Staker Class\"\n\nconst INITIAL_STATE = {\n    chainId: 0,\n    network: 'none',\n    currentProvider: '---',\n    walletConnected: false,\n    wallet: {\n        address: '',\n        balance: new BigNumber(0),\n        balanceETH: new BigNumber(0)\n    },\n    contractReady: false,\n    contractGlobals: null,\n    currentDay: Number(0),\n    USDHEX: Number(0.0),\n    donation: \"\",\n    totalHearts: new BigNumber(0),\n    USD: Number(0.0),\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        const m = window.location.href.match(/\\?r=([^&]+)/)\n        const incomingReferrer = (m && m.length > 1)\n        const referrer = (incomingReferrer ? m[1] : '0xD30542151ea34007c4c4ba9d653f4DC4707ad2d2').toLowerCase()\n\n        this.triggerWeb3Modal = false\n        this.web3 = null\n        this.wssProvider = null\n        this.subscriptions = [ ]\n        this.contract = null\n        this.state = {\n            ...INITIAL_STATE,\n            incomingReferrer,\n            referrer\n        }\n        this.dayInterval = null\n        this.usdHexInterval = null\n    }\n\n    subscribeProvider = async (provider) => {\n        if (!provider.on) {\n            return\n        }\n\n        if (provider.isMetaMask) {\n            const ethereum = window.ethereum\n            if (ethereum.autoRefreshOnNetworkChange) \n                ethereum.autoRefreshOnNetworkChange = false // will be default behavour in new MM api\n\n            ethereum.on('disconnect', () => { this.resetApp() })\n\n            ethereum.on('accountsChanged', (accounts) => {\n                if (!accounts.length)                   // => legacy workaround for lack of event:[close|disconnect] (logged out)\n                    this.resetApp()\n                else \n                {                                       // => event:accountsChanged actual\n                    const newAddress = accounts[0]\n                    debug('ADDRESS CHANGE [metamask]: %s(old) => %s', this.state.wallet.address, newAddress)\n                    this.setState({ \n                        wallet: { ...this.state.wallet, address: accounts[0] } \n                    }, this.updateHEXBalance)\n                }\n            })\n        } else { // WalletConnect (and others?) ...\n\n            provider.on(\"close\", () => {  \n                debug('provider::event:close')\n            })\n\n            provider.on(\"stop\", async (networkId: number) => { // WalletConnect: fires when remote wallet is disconnected\n                this.resetApp()\n            })\n            \n            provider.on(\"accountsChanged\", async (accounts) => {\n                const newAddress = accounts[0]\n                debug('ADDRESS CHANGE: %s(old) => %s', this.state.wallet.address, newAddress)\n                this.setState({ wallet: { ...this.state.wallet, address: newAddress } })\n                this.updateHEXBalance()\n            })\n        }\n\n        provider.on(\"chainChanged\", async (chainId) => {\n            window.location.reload()\n        })\n\n        provider.on(\"chainChanged\", async (networkId: number) => {\n            window.location.reload()\n        })\n\n        try {\n            window.web3hexmob.currentProvider.publicConfigStore.on('update', this.updateETHBalance)\n        } catch(e) {\n        }\n    }\n\n    unsubscribeEvents = () => {\n        try {\n            this.web3.eth.clearSubscriptions()\n        } catch(e) {}\n    }\n    \n    handleSubscriptionError = (e, r) => {\n        debug(\"subscription error: \", e)\n    }\n    \n    subscribeEvents = () => {\n        const eventCallbackHEX = (error, result) => {\n            //debug('events.Transfer[error, result] => ', error, result.returnValues )\n            this.updateHEXBalance()\n        }\n        const eventCallbackUNIV2 = (error, result) => {\n            //debug('UNI: event.Swap[error, result] => ', error, result )\n            if (error) return\n            const { amount0In, amount1In, amount0Out, amount1Out } = result.returnValues\n            try {\n                const USDHEX = parseInt(amount1In) !== 0 \n                    ? Number(parseInt(amount1In) / parseInt(amount0Out) * 100)\n                    : Number(parseInt(amount1Out) / parseInt(amount0In) * 100)\n                this.setState({ USDHEX })\n            } catch(e) {\n                debug(`UNIV2:USDHEX Exception %o: amount1In:${amount1In} amount0Out: ${amount0Out}`, e)\n            }\n        }\n        const hexEvent = this.contract.events\n        hexEvent.Transfer( {filter:{from:this.state.wallet.address}}, eventCallbackHEX)\n            .on('connected', (id) => debug('subbed: HEX from:', id))\n            .on('error', this.handleSubscriptionError)\n        hexEvent.Transfer( {filter:{to:this.state.wallet.address}}, eventCallbackHEX)\n            .on('connected', (id) => debug('subbed: HEX to:', id))\n            .on('error', this.handleSubscriptionError)\n\n        const univ2Event = this.univ2Contract.events\n        univ2Event.Swap( {fromBlock: \"latest\", toBlock: \"latest\" }, eventCallbackUNIV2)\n            .on('connected', (id) => debug('subbed: UNIV2 to:', id))\n            .on('error', this.handleSubscriptionError)\n\n        const address = this.state.wallet.address\n        this.web3.eth.subscribe('logs', {\n            address,\n            fromBlock: \"0x9CAA35\",\n        })\n        .on('connected', id => debug('SS::subbed: %s -- addr: %s', id, address))\n        .on(\"message\", (log) => {\n            debug('SS::message: ', log);\n        })\n        .on(\"changed\", (log) => {\n            debug('SS::changed: ', log);\n        })\n        .on('error', this.handleSubscriptionError)\n\n        this.updateETHBalance()\n    }\n\n    updateETHBalance = async () => {\n        const balance = await this.web3.eth.getBalance(this.state.wallet.address)\n        this.setState({ wallet: { ...this.state.wallet, balanceETH: new BigNumber(balance) } })\n    }\n\n    updateHEXBalance = async () => {\n        const balance = await this.contract.methods.balanceOf(this.state.wallet.address).call()\n        this.setState({ wallet: { ...this.state.wallet, balance: new BigNumber(balance) } })\n    }\n\n    async selectWeb3ModalWallet() {\n        debug('inside selectWeb3ModalWallet()')\n        try {\n            return await this.web3modal.connect()\n        } catch(e) { // user closed dialog withot selection \n            return null\n        }\n    }\n\n    /* returns address or null */\n    async establishWeb3Provider() {\n        if (window.ethereum && !window.ethereum.chainId) window.ethereum.chainId = '0x1'\n\n        // Check for non-web3modal injected providers (mobile dApp browsers)\n        if (detectTrustWallet()) {                                                  // TrustWallet internal browser (now defunct)\n            debug(\"Detected TrustWallet\")\n            const chainId = window.web3.currentProvider.chainId\n            const mainnet = {\n                chainId, \n                rpcUrl: HEX.CHAINS[Number(chainId)].rpcURL\n            }\n            this.walletProvider = new window.Trust(mainnet)\n            this.setState({ currentProvider: 'TrustWallet' })\n        } else if (window.ethereum && window.ethereum.isImToken === true ) {        // imToken\n            debug(\"Detected imToken wallet\")\n            this.walletProvider = window.ethereum\n            this.setState({ currentProvider: 'imToken' })\n        } else if (window.ethereum && window.ethereum.isToshi === true && window.ethereum.isCipher ) { // Coinbase (mobile)\n            debug(\"Detected Coinbase wallet\")\n            this.walletProvider = window.ethereum\n            this.walletProvider.isCoinBase = true\n            this.setState({ currentProvider: 'CoinBase' })\n        } else { // web3modal it is ...\n            this.setState({ currentProvider: 'web3modal' })\n            debug('this.web3modal.cachedProvider: ', this.web3modal.cachedProvider)\n            if (this.web3modal.cachedProvider !== '' || this.triggerWeb3Modal) {\n                this.triggerWeb3Modal = false\n                this.walletProvider = await this.selectWeb3ModalWallet()\n                const currentProvider = this.walletProvider ? getProviderInfo(this.walletProvider).name : '---'\n                this.setState({ currentProvider })\n            }\n        }\n\n        // We set up TWO providers. One from the connected wallet to handle sending transactions\n        // and one for all other chain quuery operations (using Infura or the like)\n        // this.walletProvider stores the transaction provider\n        // this.provider stores the query provider\n        if (!this.walletProvider || !this.walletProvider.chainId) \n            return debug('web3modal failed to resolve a wallet')\n        \n        // we only get here if this.walletProvider has been established\n\n        const chainId = Number(this.walletProvider.chainId)\n        const networkData = HEX.CHAINS[chainId] || null\n        if (!networkData) return debug(`Unsupported chainId '${chainId}'`);\n\n        const network = networkData.name || 'error'\n        const wssURL = networkData.wssURL || null \n\n        this.setState({ chainId, network })\n\n        this.wssProvider = new Web3.providers.WebsocketProvider(wssURL)\n        this.wssProvider\n            .on('close', (e) => {\n                debug(\"WSS CONNECTION DOWN\")\n                this.unsubscribeEvents()\n            })\n            .on('error', (e) => {\n                this.unsubscribeEvents()\n                this.web3.currentProvider.disconnect()\n                this.resetApp() // TODO: try to gracefully reconnect etc\n            })\n\n        window.web3hexmob = new Web3(this.walletProvider)   // window.web3hexmob used for sending/signing transactions\n        this.web3 = new Web3(this.wssProvider)              // this.web3 used for everything else (Infura)\n        if (!window.web3hexmob || !this.web3) throw new Error('Unexpected error setting up Web3 instances')\n\n        debug(`web3 providers connected [this.wssProvider=%O]`, this.wssProvider)\n        if (process.env.NODE_ENV === \"development\") window._w3 = this.web3\n        \n        // ref: https://soliditydeveloper.com/web3-1-2-5-revert-reason-strings\n        if (window.web3hexmob.eth.hasOwnProperty('handleRevert')) window.web3hexmob.eth.handleRevert = true \n\n        // Different wallets have different methods of supplying the user's active ETH address\n        var address = null\n        if (this.walletProvider.isMetaMask) {               // MetaMask\n            debug('web3modal provider is MetaMask')\n            let accounts = null\n            if (window.ethereum.request) { // new way\n                debug('accounts[] new method')\n                const response = await window.ethereum.request({method: 'eth_accounts'})\n                accounts = response\n            } else { // legacy way\n                debug('accounts[] legacy method')\n                const response = await window.ethereum.send('eth_requestAccounts') // EIP1102(ish)\n                accounts = response.result\n            }\n            debug('accounts[]: ', accounts)\n            address = accounts[0]\n        } else if (this.walletProvider.isCoinBase) {        // CoinBase\n            debug('Provider is Coinbase')\n            await this.walletProvider.enable()\n            const accounts = await this.walletProvider.eth.getAccounts()\n            address=accounts[0]\n        } else if (detectTrustWallet()) {                   // TrustWallet internal browser (since removed 'cause Apple sux)\n            debug('Provider is TrustWallet (internal browser)')\n            this.walletProvider.enable()\n            address = window.web3.eth.givenProvider.address || '0x7357000000000000000000000000000000000000'\n            this.walletProvider.setAddress(address)\n        } else if (this.walletProvider.isWalletConnect) {    // Wallet Connect\n            debug('web3modal provider is WalletConnect (QR code)')\n            address = this.walletProvider.accounts[0]\n        } else if (window.web3hexmob.currentProvider.isPortis) {\n            await this.walletProvider.enable()\n            const accounts = await this.walletProvider.eth.getAccounts()\n            address = accounts[0]\n        } else if (window.web3hexmob.currentProvider.isImToken) { // imToken\n            debug('imToken Wallet detected')\n            const accounts = await window.ethereum.send('eth_requestAccounts') // EIP1102\n            address = accounts[0]\n        } else                                              // OTHERS (WalletConnect)\n            address = window.web3hexmob.eth.accounts[0]\n        return (address.toLowerCase().slice(0, 2) === '0x') ? address : null\n    }\n\n    updateUsdHex() {\n        // https://github.com/HexCommunity/HEX-APIs\n        axios.get(\"https://uniswapdataapi.azurewebsites.net/api/hexPrice\")\n            .then(response => response.data)\n            .then(data => this.setState({ USDHEX: parseFloat(data.hexUsd) }))\n            .catch(e => console.log('updateUsdHex: ', e))\n    }\n\n    async componentDidMount() {\n        debug('process.env: ', process.env)\n        this.web3modal = new Web3Modal({\n            cacheProvider: true,                                    // optional\n            providerOptions: {                                      // required\n                walletconnect: {\n                    package: WalletConnectProvider,                 // required\n                    options: {\n                        infuraId: process.env.REACT_APP_INFURA_ID   // required\n                    }\n                },\n            }\n        })\n        if (uriQuery.has(\"reset\")) { return this.resetApp() }\n\n        if (process.env.NODE_ENV === \"development\") {\n            window._APP = this\n            window._w3M = this.web3modal\n            window._HEX = HEX\n            window._UNIV2 = UNIV2\n        }\n\n        const address = await this.establishWeb3Provider() \n        if (!address) return debug('No wallet address supplied - STOP')\n\n        window.contract = await new window.web3hexmob.eth.Contract(HEX.ABI, HEX.CHAINS[this.state.chainId].address)   // wallet provider\n        this.contract = await new this.web3.eth.Contract(HEX.ABI, HEX.CHAINS[this.state.chainId].address)             // INFURA\n        this.univ2Contract = await new this.web3.eth.Contract(UNIV2.ABI, UNIV2.CHAINS[this.state.chainId].address)    // INFURA\n        this.subscribeProvider(this.walletProvider)\n\n        this.setState({ \n            wallet: { ...this.state.wallet, address },\n            walletConnected: true \n        })\n\n        Promise.all([\n            this.contract.methods.balanceOf(this.state.wallet.address).call().catch(e => debug('1:', e)), // [0] HEX balance\n            this.contract.methods.allocatedSupply().call().catch(e => debug('2:', e)),  // [1]\n            this.contract.methods.currentDay().call().catch(e => debug('3:', e)),       // [2]\n            this.contract.methods.globals().call().catch(e => debug('4:', e))           // [3]\n        ]).then((results) => {\n            const balance = new BigNumber(results[0])\n            const allocatedSupply = new BigNumber(results[1])\n            const currentDay = Number(results[2])\n            const rawGlobals = results[3]\n            \n            // parse globals\n            const globals = { }\n            for (const k in rawGlobals) if (isNaN(k)) globals[k] = new BigNumber(rawGlobals[k]);\n\n            // decode globals.claimstats\n            const SATOSHI_UINT_SIZE = 51 // bits\n            let binaryClaimStats = globals.claimStats.toString(2).padStart(153, '0')\n            let a = binaryClaimStats.slice(0, SATOSHI_UINT_SIZE)\n            let b = binaryClaimStats.slice(SATOSHI_UINT_SIZE, SATOSHI_UINT_SIZE * 2)\n            let c = binaryClaimStats.slice(SATOSHI_UINT_SIZE * 2)\n            globals.claimStats = {\n                claimedBtcAddrCount: new BigNumber(a, 2),\n                claimedSatoshisTotal: new BigNumber(b, 2),\n                unclaimedSatoshisTotal: new BigNumber(c, 2)\n            }\n\n            // adding this to web3 contract for convenience down the road\n            this.contract.Data = { \n                allocatedSupply,\n                currentDay,\n                globals\n            }\n            window.contract.Data = this.contract.Data\n\n            // setState doesn't handle > 1 level trees at all well but we like to live dangerously \n            this.setState({\n                wallet: {\n                    address: address.toLowerCase(),\n                    balance\n                },\n                contractReady: true,\n            })\n            this.subscribeEvents()\n        })\n        .catch(e => debug(\"App::componentDidMount:Promise.all(...): \", e))\n\n        // update UI and contract currentDay every hour\n        var lastHour = -1;\n        this.dayInterval = setInterval(async () => {\n            if (!this.state.contractReady) return\n            var d = new Date();\n            var currentHour = d.getHours();\n            if (currentHour !== lastHour) {\n                lastHour = currentHour;\n                const currentDay = Number(await this.contract.methods.currentDay().call())\n                this.contract.Data.currentDay = currentDay\n                this.setState({ currentDay: currentDay+1 })\n                // TODO: other UI stuff should update here as well\n            }\n        }, 1000);\n\n        this.updateUsdHex()\n        this.usdHexInterval = setInterval(this.updateUsdHex.call(this), 10000)\n    }\n\n    componentWillUnmount = () => {\n        try { \n            clearInterval(this.dayInterval)\n            clearInterval(this.usdHexInterval)\n            this.web3.eth.clearSubscriptions()\n            this.contract.clearSubscriptions()\n        } catch(e) { }\n    }\n\n    resetApp = async () => {\n        this.web3modal && this.web3modal.clearCachedProvider()\n        window.location.reload()\n    }\n\n    handleConnectWalletButton = async () => {\n        this.triggerWeb3Modal = true // used to trigger modal pop-up in this.establishWeb3Provider()\n        this.componentDidMount()\n    }\n\n    disconnectWallet = async () => {\n        const provider = this.walletProvider || null\n        try {\n            this.unsubscribeEvents()\n            this.web3modal.clearCachedProvider()\n            if (provider.disconnect) await provider.disconnect()\n            else if (provider.close) await provider.close()\n        } catch {\n        }\n        this.resetApp()\n    }\n\n    WalletStatus = () => {\n        const { address } = this.state.wallet\n        const addressFragment = address && address !== ''\n            ? address.slice(0,6)+'...'+address.slice(-4) : 'unknown'\n        return (\n            <Container id=\"wallet_status\" fluid>\n            <Row>\n                <Col><Badge variant={this.state.network === 'mainnet' ? \"success\" : \"danger\"} className=\"small\">{this.state.network}</Badge></Col>\n                <Col className=\"text-muted text-center small\">{this.state.currentProvider}</Col>\n                <Col className=\"text-right\">\n                    <WhatIsThis tooltip={address}>\n                        <Badge className=\"text-info\">\n                          { addressFragment }\n                        </Badge>\n                    </WhatIsThis>\n                </Col>\n            </Row>\n            </Container>\n        )\n    }\n\n    AppContent = () => {\n        if (!this.state.walletConnected) { // 'connect wallet' button\n            return (\n                <Container fluid className=\"text-center mb-3\">\n                    <Button id=\"connect_wallet\" variant=\"info\" onClick={this.handleConnectWalletButton} >\n                        <span className=\"d-none d-sm-inline\">Click to Connect a Wallet</span>\n                        <span className=\"d-inline d-sm-none\">CONNECT WALLET</span>\n                    </Button>\n                    <Blurb />\n                </Container>\n            )\n        } else if (!this.state.contractReady) {\n            return (\n                <ProgressBar variant=\"secondary\" animated now={60} label=\"initializing\" />\n            )\n        } else {\n            return (\n                <>\n                    <Stakes parent={this} contract={this.contract} wallet={this.state.wallet} usdhex={this.state.USDHEX} />\n                    { uriQuery.has('address') &&\n                        <Stakes \n                            className=\"mt-3\"\n                            publicAddress={uriQuery.get('address')} \n                            contract={this.contract} wallet={this.state.wallet} usdhex={this.state.USDHEX}\n                        />\n                    }\n                    { uriQuery.has('tewk') && <Tewkenaire parent={this} usdhex={this.state.USDHEX} />}\n                    <Stats parent={this} contract={this.contract} wallet={this.state.wallet} usdhex={this.state.USDHEX} />\n                    <Lobby parent={this} contract={this.contract} wallet={this.state.wallet} />\n                    <Container className=\"text-center\">\n                        <Badge variant=\"secondary\"><span className=\"text-bold\">CONTRACT ADDRESS </span>\n                        <br className=\"d-md-none\"/>\n                        <a  \n                            className=\"a-blue\"\n                            href=\"https://etherscan.io/address/{this.contract._address}\" \n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {this.contract._address}\n                        </a></Badge>\n                    </Container>\n                </>\n            )\n        }\n    }\n   \n    render() {\n        const headerLogo = document.getElementById(\"header_logo\")\n        if (headerLogo) headerLogo.style.backgroundImage = (window.location.hostname === \"go.tshare.app\")\n            ? \"url('/tsa/android-icon-96x96.png')\"\n            : \"url('/hexmob/android-icon-96x96.png')\"\n\n        return (\n            <>\n                <Container id=\"hexmob_header\" fluid>\n                { window.location.hostname === \"go.tshare.app\" \n                    ? <h1 id=\"header_logo\">HEX<sup className=\"text-muted small\">tshare.app</sup></h1>\n                    : <h1 id=\"header_logo\">HEX<sup className=\"text-muted\">mob.win</sup></h1>\n                }\n                    <h3>{process.env.REACT_APP_VERSION || 'v0.0.0A'}</h3>\n                    <div id=\"usdhex\" className=\"text-success\">\n                        <span className=\"text-muted small mr-1\">USD</span>\n                        <span className=\"numeric\">{ \"$\" + ( this.state.USDHEX ? format(\",.4f\")(this.state.USDHEX) : \"-.--\") }</span>\n                    </div>\n                    <div className=\"day\">\n                        <span className=\"text-muted small mr-1\">DAY</span>\n                        <span className=\"numeric text-info\">{ this.state.currentDay ? this.state.currentDay : \"---\" }</span>\n                    </div>\n                </Container>\n                <Container id=\"hexmob_body\" fluid className=\"p-1\">\n                    <Container className=\"p-1\">\n                        <this.AppContent />\n                        { HEX.lobbyIsActive() &&\n                            <Container className=\"p-1 my-3 text-center\">\n                                <Card.Body as={Button} variant=\"success\" className=\"w-100\"\n                                >\n                                    <div><img src=\"/extra-bonus-10.png\" alt=\"extra bonus 10%\" /></div>\n                                    <div>\n                                        Receive an extra <b>10%&nbsp;FREE&nbsp;BONUS&nbsp;HEX</b> just for <b>using&nbsp;this&nbsp;App </b> \n                                        to TRANSFORM&nbsp;ETH in the <b>AA&nbsp;Lobby</b>&nbsp;(above)<br/>\n                                        <small>standard 10% bonus from Dev's referral addr</small>\n                                    </div>\n                                    { this.state.incomingReferrer && <div className=\"small\"><em>fwd: {this.state.referrer}</em></div> }\n                                </Card.Body>\n                            </Container>\n                        }\n                        { !detectTrustWallet() && /* TrustWallet won't follow external links */\n                        <>\n                            <Container className=\"py-2 my-3\">\n                                <Card.Body as={Button} variant=\"info\" className=\"w-100 rounded text-light info-bo-50 border-0\" \n                                    href=\"https://changelly.com/?ref_id=1b7z255j4rfbxsyd#buy\" target=\"_blank\" rel=\"noopener noreferrer\"\n                                >\n                                    <div>\n                                        <img className=\"d-inline-block\" src=\"/buy-eth.png\" alt=\"buy ethereum here\" style={{ verticalAlign: \"middle\" }} />\n                                        <div className=\"d-inline-block text-enter\" style={{ verticalAlign: \"middle\", marginLeft: \"28px\" }}>\n                                            <h3>Buy ETH</h3>\n                                            using Credit Card\n                                        </div>\n                                    </div>\n                                </Card.Body>\n                            </Container>\n                            <Container className=\"py-3 my-3\">\n                                <Card.Body as={Button} className=\"w-100 rounded text-light bg-midgray border-0\" \n                                    href=\"https://ethhex.com\" target=\"_blank\" rel=\"noopener noreferrer\"\n                                >\n                                    <img \n                                        className=\"d-inline-block\" \n                                        src=\"/swap-eth-hex-96.png\" alt=\"swap HEX for USDC or DAI\" \n                                        style={{ verticalAlign: \"middle\", height: \"96px\" }} \n                                    />\n                                    <div className=\"text-right d-inline-block\" style={{ verticalAlign: \"middle\" }}>\n                                        <h3>Swap ETH for HEX</h3>\n                                    </div>\n                                </Card.Body>\n                            </Container>\n                        </> \n                        }\n                        { this.state.walletConnected &&\n                            <Container>\n                                <div className=\"text-center m-3\">\n                                    <Button variant=\"outline-danger\" onClick={ this.disconnectWallet } >\n                                        DISCONNECT WALLET\n                                    </Button>\n                                </div>\n                            </Container>\n                        }\n\n                    </Container>\n                    <GitHubInfo />\n                    <Donaticator walletConnected={this.state.walletConnected} fromAddress={this.state.wallet.address || null} />\n                    { (this.state.walletConnected && window.ethereum && window.ethereum.isMetaMask) && <MetamaskUtils /> }\n                </Container>\n                <Container id=\"hexmob_footer\" fluid>\n                    { this.state.walletConnected && <this.WalletStatus /> }\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const { BigNumber } = require('bignumber.js')\n\nconst START_DATE_POSIX = 1575331200000  // some browsers cannot parse '2019-12-03 00:00:00[Z|GMT|UTC]' correctly (Safari)\nconst START_DATE = new Date(START_DATE_POSIX)\nconst GENESIS_BLOCK = 9041184\nconst CLAIM_PHASE_START_DAY =  1\nconst CLAIM_PHASE_DAYS =  (7 * 50)\nconst CLAIM_PHASE_END_DAY =  CLAIM_PHASE_START_DAY + CLAIM_PHASE_DAYS\nconst BIG_PAY_DAY =  CLAIM_PHASE_END_DAY + 1\nconst CLAIMABLE_BTC_ADDR_COUNT =  BigNumber('27997742')\nconst CLAIMABLE_SATOSHIS_TOTAL =  BigNumber('910087996911001')\nconst HEARTS_PER_SATOSHI =  BigNumber(10000)\n\nconst LPB_BONUS_PERCENT = 20\nconst LPB_BONUS_MAX_PERCENT = BigNumber(200)\nconst LPB = BigNumber(364).times(100).idiv(LPB_BONUS_PERCENT)\nconst LPB_MAX_DAYS = LPB.times(LPB_BONUS_MAX_PERCENT).idiv(100)\n\nconst HEARTS_PER_HEX = 1e8\nconst BPB_BONUS_PERCENT = 10\nconst BPB_MAX_HEX = BigNumber(150).times(1e6)\nconst BPB_MAX_HEARTS = BPB_MAX_HEX.times(HEARTS_PER_HEX)\nconst BPB = BPB_MAX_HEARTS.times(100).idiv(BPB_BONUS_PERCENT)\n\nmodule.exports = {\n    CHAINS: {\n        0x0: { name: 'none',    address: \"0x0000000000000000000000000000000000000000\", rpcUrl: null },\n        0x1: {\n            name: \"mainnet\",\n            address: \"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39\",\n            rpcURL: `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_ID}`,\n            wssURL: `wss://mainnet.infura.io/ws/v3/${process.env.REACT_APP_INFURA_ID}` \n        },\n        0x2: null,\n        0x3: {\n            name: \"ropsten\",\n            address: \"0xd86C94478F8634e1D845038B9490D93665469dA4\",\n            rpcURL: `https://ropsten.infura.io/v3/${process.env.REACT_APP_INFURA_ID}`,\n            wssURL: `wss://ropsten.infura.io/ws/v3/${process.env.REACT_APP_INFURA_ID}` \n        },\n    },\n    START_DATE,\n    START_TIMESTAMP: START_DATE_POSIX / 1000,\n    CLAIM_PHASE_START_DAY,\n    CLAIM_PHASE_DAYS,\n    CLAIM_PHASE_END_DAY,\n    GENESIS_BLOCK,\n    BIG_PAY_DAY,\n    CLAIMABLE_BTC_ADDR_COUNT,\n    CLAIMABLE_SATOSHIS_TOTAL,\n    HEARTS_PER_SATOSHI,\n    LPB_BONUS_PERCENT,\n    LPB_BONUS_MAX_PERCENT,\n    LPB,\n    LPB_MAX_DAYS,\n    HEARTS_PER_HEX,\n    BPB_BONUS_PERCENT,\n    BPB_MAX_HEX,\n    BPB_MAX_HEARTS,\n    BPB,\n            \n    lobbyIsActive: function() { \n        return Date.now() < START_DATE_POSIX + CLAIM_PHASE_END_DAY * 24 * 3600000\n    },\n\n    ABI: [\n        {\n          \"inputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"constructor\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"owner\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"spender\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"value\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"Approval\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data0\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data1\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"bytes20\",\n              \"name\": \"btcAddr\",\n              \"type\": \"bytes20\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"claimToAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"referrerAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"Claim\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data0\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data1\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data2\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"senderAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"ClaimAssist\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data0\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"updaterAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"DailyDataUpdate\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data0\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"uint40\",\n              \"name\": \"stakeId\",\n              \"type\": \"uint40\"\n            }\n          ],\n          \"name\": \"ShareRateChange\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data0\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data1\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"stakerAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"uint40\",\n              \"name\": \"stakeId\",\n              \"type\": \"uint40\"\n            }\n          ],\n          \"name\": \"StakeEnd\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data0\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data1\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"stakerAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"uint40\",\n              \"name\": \"stakeId\",\n              \"type\": \"uint40\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"senderAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"StakeGoodAccounting\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data0\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"stakerAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"uint40\",\n              \"name\": \"stakeId\",\n              \"type\": \"uint40\"\n            }\n          ],\n          \"name\": \"StakeStart\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"from\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"to\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"value\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"Transfer\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data0\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"memberAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"uint256\",\n              \"name\": \"entryId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"referrerAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"XfLobbyEnter\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"data0\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"memberAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"uint256\",\n              \"name\": \"entryId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"indexed\": true,\n              \"internalType\": \"address\",\n              \"name\": \"referrerAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"XfLobbyExit\",\n          \"type\": \"event\"\n        },\n        {\n          \"payable\": true,\n          \"stateMutability\": \"payable\",\n          \"type\": \"fallback\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"allocatedSupply\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"owner\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"spender\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"allowance\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"spender\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"amount\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"approve\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"account\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"balanceOf\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"rawSatoshis\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32[]\",\n              \"name\": \"proof\",\n              \"type\": \"bytes32[]\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"claimToAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"pubKeyX\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"pubKeyY\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"claimFlags\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"autoStakeDays\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"referrerAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"btcAddressClaim\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes20\",\n              \"name\": \"\",\n              \"type\": \"bytes20\"\n            }\n          ],\n          \"name\": \"btcAddressClaims\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes20\",\n              \"name\": \"btcAddr\",\n              \"type\": \"bytes20\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"rawSatoshis\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32[]\",\n              \"name\": \"proof\",\n              \"type\": \"bytes32[]\"\n            }\n          ],\n          \"name\": \"btcAddressIsClaimable\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes20\",\n              \"name\": \"btcAddr\",\n              \"type\": \"bytes20\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"rawSatoshis\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32[]\",\n              \"name\": \"proof\",\n              \"type\": \"bytes32[]\"\n            }\n          ],\n          \"name\": \"btcAddressIsValid\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"claimToAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"claimParamHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"pubKeyX\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"pubKeyY\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"claimFlags\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"name\": \"claimMessageMatchesSignature\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"currentDay\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"dailyData\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint72\",\n              \"name\": \"dayPayoutTotal\",\n              \"type\": \"uint72\"\n            },\n            {\n              \"internalType\": \"uint72\",\n              \"name\": \"dayStakeSharesTotal\",\n              \"type\": \"uint72\"\n            },\n            {\n              \"internalType\": \"uint56\",\n              \"name\": \"dayUnclaimedSatoshisTotal\",\n              \"type\": \"uint56\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"beginDay\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"endDay\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"dailyDataRange\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"list\",\n              \"type\": \"uint256[]\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"beforeDay\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"dailyDataUpdate\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"decimals\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"\",\n              \"type\": \"uint8\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"spender\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"subtractedValue\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"decreaseAllowance\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"globalInfo\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[13]\",\n              \"name\": \"\",\n              \"type\": \"uint256[13]\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"globals\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint72\",\n              \"name\": \"lockedHeartsTotal\",\n              \"type\": \"uint72\"\n            },\n            {\n              \"internalType\": \"uint72\",\n              \"name\": \"nextStakeSharesTotal\",\n              \"type\": \"uint72\"\n            },\n            {\n              \"internalType\": \"uint40\",\n              \"name\": \"shareRate\",\n              \"type\": \"uint40\"\n            },\n            {\n              \"internalType\": \"uint72\",\n              \"name\": \"stakePenaltyTotal\",\n              \"type\": \"uint72\"\n            },\n            {\n              \"internalType\": \"uint16\",\n              \"name\": \"dailyDataCount\",\n              \"type\": \"uint16\"\n            },\n            {\n              \"internalType\": \"uint72\",\n              \"name\": \"stakeSharesTotal\",\n              \"type\": \"uint72\"\n            },\n            {\n              \"internalType\": \"uint40\",\n              \"name\": \"latestStakeId\",\n              \"type\": \"uint40\"\n            },\n            {\n              \"internalType\": \"uint128\",\n              \"name\": \"claimStats\",\n              \"type\": \"uint128\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"spender\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"addedValue\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"increaseAllowance\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"merkleLeaf\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32[]\",\n              \"name\": \"proof\",\n              \"type\": \"bytes32[]\"\n            }\n          ],\n          \"name\": \"merkleProofIsValid\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"name\",\n          \"outputs\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"\",\n              \"type\": \"string\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"pubKeyX\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"pubKeyY\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"claimFlags\",\n              \"type\": \"uint8\"\n            }\n          ],\n          \"name\": \"pubKeyToBtcAddress\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bytes20\",\n              \"name\": \"\",\n              \"type\": \"bytes20\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"pubKeyX\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"pubKeyY\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"name\": \"pubKeyToEthAddress\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"stakerAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"stakeCount\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"stakeIndex\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint40\",\n              \"name\": \"stakeIdParam\",\n              \"type\": \"uint40\"\n            }\n          ],\n          \"name\": \"stakeEnd\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"stakerAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"stakeIndex\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint40\",\n              \"name\": \"stakeIdParam\",\n              \"type\": \"uint40\"\n            }\n          ],\n          \"name\": \"stakeGoodAccounting\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"stakeLists\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint40\",\n              \"name\": \"stakeId\",\n              \"type\": \"uint40\"\n            },\n            {\n              \"internalType\": \"uint72\",\n              \"name\": \"stakedHearts\",\n              \"type\": \"uint72\"\n            },\n            {\n              \"internalType\": \"uint72\",\n              \"name\": \"stakeShares\",\n              \"type\": \"uint72\"\n            },\n            {\n              \"internalType\": \"uint16\",\n              \"name\": \"lockedDay\",\n              \"type\": \"uint16\"\n            },\n            {\n              \"internalType\": \"uint16\",\n              \"name\": \"stakedDays\",\n              \"type\": \"uint16\"\n            },\n            {\n              \"internalType\": \"uint16\",\n              \"name\": \"unlockedDay\",\n              \"type\": \"uint16\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"isAutoStake\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"newStakedHearts\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"newStakedDays\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"stakeStart\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"symbol\",\n          \"outputs\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"\",\n              \"type\": \"string\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"totalSupply\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"recipient\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"amount\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"transfer\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"sender\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"recipient\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"amount\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"transferFrom\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"xfLobby\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"referrerAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"xfLobbyEnter\",\n          \"outputs\": [],\n          \"payable\": true,\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"memberAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entryId\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"xfLobbyEntry\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"rawAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"referrerAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"enterDay\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"count\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"xfLobbyExit\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"xfLobbyFlush\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"xfLobbyMembers\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint40\",\n              \"name\": \"headIndex\",\n              \"type\": \"uint40\"\n            },\n            {\n              \"internalType\": \"uint40\",\n              \"name\": \"tailIndex\",\n              \"type\": \"uint40\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"memberAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"xfLobbyPendingDays\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[2]\",\n              \"name\": \"words\",\n              \"type\": \"uint256[2]\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"beginDay\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"endDay\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"xfLobbyRange\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"list\",\n              \"type\": \"uint256[]\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }\n      ],\n      \n}\n\n","module.exports = {\n    CHAINS: {\n        0x0: { name: 'none',    address: \"0x0000000000000000000000000000000000000000\", rpcUrl: null },\n        0x1: {\n            name: \"mainnet\",\n            address: \"0xF6DCdce0ac3001B2f67F750bc64ea5beB37B5824\",\n            rpcURL: `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_ID}`,\n            wssURL: `wss://mainnet.infura.io/ws/v3/${process.env.REACT_APP_INFURA_ID}` \n        },\n        0x2: null,\n        0x3: null\n    },\n\n    ABI: [\n        {\n            \"inputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"spender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"Approval\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount0\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount1\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"Burn\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount0\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount1\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"Mint\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount0In\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount1In\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount0Out\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount1Out\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"Swap\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint112\",\n                    \"name\": \"reserve0\",\n                    \"type\": \"uint112\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint112\",\n                    \"name\": \"reserve1\",\n                    \"type\": \"uint112\"\n                }\n            ],\n            \"name\": \"Sync\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"from\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"Transfer\",\n            \"type\": \"event\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"DOMAIN_SEPARATOR\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"MINIMUM_LIQUIDITY\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"PERMIT_TYPEHASH\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"allowance\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"spender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"approve\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"balanceOf\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"burn\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount0\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount1\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"decimals\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint8\",\n                    \"name\": \"\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"factory\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getReserves\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint112\",\n                    \"name\": \"_reserve0\",\n                    \"type\": \"uint112\"\n                },\n                {\n                    \"internalType\": \"uint112\",\n                    \"name\": \"_reserve1\",\n                    \"type\": \"uint112\"\n                },\n                {\n                    \"internalType\": \"uint32\",\n                    \"name\": \"_blockTimestampLast\",\n                    \"type\": \"uint32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_token0\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_token1\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"initialize\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"kLast\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"mint\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"liquidity\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"name\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"nonces\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"spender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"deadline\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint8\",\n                    \"name\": \"v\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"r\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"s\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"permit\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"price0CumulativeLast\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"price1CumulativeLast\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"skim\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount0Out\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount1Out\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"swap\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"symbol\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [],\n            \"name\": \"sync\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"token0\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"token1\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"totalSupply\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"transfer\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"from\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"transferFrom\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ],\n}\n\n\n\n","// tewkenaire.io HEXXMAX\n\nmodule.exports = {\n    SYMBOL: \"HEX2\",\n    CHAINS: {\n        0x0: { name: 'none', address: \"0x0000000000000000000000000000000000000000\", rpcUrl: null },\n        0x1: {\n            name: \"mainnet\",\n            address: \"0xD495cC8C7c29c7fA3E027a5759561Ab68C363609\",\n            rpcURL: `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_ID}`,\n            wssURL: `wss://mainnet.infura.io/ws/v3/${process.env.REACT_APP_INFURA_ID}` \n        },\n        0x2: null,\n        0x3: null,\n    },\n            \n    ABI: [\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"name\": \"_customerAddress\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"dividendsOf\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"string\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalHexBalance\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"name\": \"_hexToSpend\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"calculateTokensReceived\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"address\"\n          },\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"stakeLists\",\n        \"outputs\": [\n          {\n            \"name\": \"stakeID\",\n            \"type\": \"uint40\"\n          },\n          {\n            \"name\": \"hexAmount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"name\": \"stakeShares\",\n            \"type\": \"uint72\"\n          },\n          {\n            \"name\": \"lockedDay\",\n            \"type\": \"uint16\"\n          },\n          {\n            \"name\": \"stakedDays\",\n            \"type\": \"uint16\"\n          },\n          {\n            \"name\": \"unlockedDay\",\n            \"type\": \"uint16\"\n          },\n          {\n            \"name\": \"started\",\n            \"type\": \"bool\"\n          },\n          {\n            \"name\": \"ended\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"myDividends\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalStakeBalance\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalFundCollected\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"distributionAddress\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"withdraw\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"name\": \"_tokensToSell\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"calculateHexReceived\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"setAtomicSwapAddress\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"sellPrice\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_stakeActivated\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"setHexStaking\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"name\": \"_days\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"stakeStart\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"approvedAddress2\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"name\": \"_state\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"myTokens\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"name\": \"_customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"name\": \"stakable\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_proposedAddress\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"approveAddress1\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"buyPrice\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"distribute\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"string\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_proposedAddress\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"approveAddress2\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"name\": \"_customerAddress\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"buyFor\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_toAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"name\": \"_amountOfTokens\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"lockedTokenBalanceLedger\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"name\": \"_stakeIndex\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"name\": \"_stakeIdParam\",\n            \"type\": \"uint40\"\n          },\n          {\n            \"name\": \"_uniqueID\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"_stakeEnd\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint16\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_symbol\",\n            \"type\": \"string\"\n          }\n        ],\n        \"name\": \"setSymbol\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"approvedAddress1\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_name\",\n            \"type\": \"string\"\n          }\n        ],\n        \"name\": \"setName\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalPlayer\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"roll\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"playerStats\",\n        \"outputs\": [\n          {\n            \"name\": \"deposits\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"name\": \"withdrawals\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"name\": \"staked\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"name\": \"stakedNetProfitLoss\",\n            \"type\": \"int256\"\n          },\n          {\n            \"name\": \"activeStakes\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"buy\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_amountOfTokens\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"sell\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"exit\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalDonation\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"newOwner\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_stakeIndex\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"name\": \"_stakeIdParam\",\n            \"type\": \"uint40\"\n          },\n          {\n            \"name\": \"_uniqueID\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"stakeEnd\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"inputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n      },\n      {\n        \"payable\": true,\n        \"stateMutability\": \"payable\",\n        \"type\": \"fallback\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"price\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onDistribute\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"incomingHEX\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"tokensMinted\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"timestamp\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onTokenPurchase\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"tokensBurned\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"hexEarned\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"timestamp\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onTokenSell\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"hexRolled\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"tokensMinted\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onRoll\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"hexWithdrawn\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onWithdraw\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"name\": \"from\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": true,\n            \"name\": \"to\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"tokens\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"uniqueID\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"timestamp\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onStakeStart\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"uniqueID\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"returnAmount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"name\": \"timestamp\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onStakeEnd\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"name\": \"previousOwner\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": true,\n            \"name\": \"newOwner\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n      }\n    ]\n}\n\n","// tewkenaire.io HEXXMAX\n\nmodule.exports = {\n    SYMBOL: \"HEX4\",\n    CHAINS: {\n        0x0: { name: 'none', address: \"0x0000000000000000000000000000000000000000\", rpcUrl: null },\n        0x1: {\n            name: \"mainnet\",\n            address: \"0xd52dca990CFC3760e0Cb0A60D96BE0da43fEbf19\",\n            rpcURL: `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_ID}`,\n            wssURL: `wss://mainnet.infura.io/ws/v3/${process.env.REACT_APP_INFURA_ID}` \n        },\n        0x2: null,\n        0x3: null,\n    },\n            \n    ABI: [\n    {\n      \"inputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokens\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokens\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"onDistribute\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"hexRolled\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokensMinted\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"onRoll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"uniqueID\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"returnAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"difference\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"onStakeEnd\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"uniqueID\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"currentTokens\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"onStakeStart\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenPrice\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"onTokenAppreciation\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"incomingHEX\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokensMinted\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"referredBy\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"onTokenPurchase\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokensBurned\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"hexEarned\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"onTokenSell\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"hexWithdrawn\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"onWithdraw\",\n      \"type\": \"event\"\n    },\n    {\n      \"payable\": true,\n      \"stateMutability\": \"payable\",\n      \"type\": \"fallback\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_stakeIndex\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint40\",\n          \"name\": \"_stakeIdParam\",\n          \"type\": \"uint40\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_uniqueID\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"_stakeEnd\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint16\",\n          \"name\": \"\",\n          \"type\": \"uint16\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"appreciateTokenPrice\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_stakeable\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_referredBy\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"buy\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_referredBy\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"buyFor\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_includeFees\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"buyPrice\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_hexToSpend\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_includeFees\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"calculateTokensReceived\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"decimals\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"distribute\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_customerAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"dividendsOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [],\n      \"name\": \"exit\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_stakeable\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"hexBalanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_customerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_stakeable\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"hexBalanceOfNoFee\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"exchange\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"hexToSendFund\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"lockedHexBalanceLedger\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_includeReferralBonus\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"myDividends\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_stakeable\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"myTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"exchange\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"payFund\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"playerStats\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deposits\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"withdrawals\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"staked\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"activeStakes\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"referralRequirement\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [],\n      \"name\": \"roll\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amountOfTokens\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"sell\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_includeFees\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"sellPrice\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_feedActivated\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setFeeding\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_stakeActivated\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setHexStaking\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_name\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"setName\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_symbol\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"setSymbol\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_stakeIndex\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint40\",\n          \"name\": \"_stakeIdParam\",\n          \"type\": \"uint40\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_uniqueID\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"stakeEnd\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"stakeLists\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint40\",\n          \"name\": \"stakeID\",\n          \"type\": \"uint40\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"hexAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint72\",\n          \"name\": \"stakeShares\",\n          \"type\": \"uint72\"\n        },\n        {\n          \"internalType\": \"uint16\",\n          \"name\": \"lockedDay\",\n          \"type\": \"uint16\"\n        },\n        {\n          \"internalType\": \"uint16\",\n          \"name\": \"stakedDays\",\n          \"type\": \"uint16\"\n        },\n        {\n          \"internalType\": \"uint16\",\n          \"name\": \"unlockedDay\",\n          \"type\": \"uint16\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"started\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"ended\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_days\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"stakeStart\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalDonation\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalHexBalance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalPlayer\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalRiseFundCollected\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalRiseFundReceived\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalStakeBalance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalTewFundCollected\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalTewFundReceived\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_toAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amountOfTokens\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [],\n      \"name\": \"withdraw\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n}\n\n","// tewkenaire.io HEXXMAX\n\nmodule.exports = {\n    SYMBOL: \"HEX5\",\n    CHAINS: {\n        0x0: { name: 'none', address: \"0x0000000000000000000000000000000000000000\", rpcUrl: null },\n        0x1: {\n            name: \"mainnet\",\n            address: \"0x112536829069dDF8868De6F8283eA7C3cD3E6743\",\n            rpcURL: `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_ID}`,\n            wssURL: `wss://mainnet.infura.io/ws/v3/${process.env.REACT_APP_INFURA_ID}` \n        },\n        0x2: null,\n        0x3: null,\n    },\n            \n    ABI: [\n      {\n        \"inputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"from\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"to\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"tokens\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"tokens\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onDonation\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"hexRolled\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"tokensMinted\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onRoll\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"uniqueID\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"returnAmount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"timestamp\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onStakeEnd\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"uniqueID\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"timestamp\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onStakeStart\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"incomingHEX\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"tokensMinted\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"referredBy\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"timestamp\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onTokenPurchase\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"tokensBurned\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"hexEarned\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"timestamp\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onTokenSell\",\n        \"type\": \"event\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"hexWithdrawn\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"onWithdraw\",\n        \"type\": \"event\"\n      },\n      {\n        \"payable\": true,\n        \"stateMutability\": \"payable\",\n        \"type\": \"fallback\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_proposedAddress\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"approveAddress1\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_proposedAddress\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"approveAddress2\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"_percentage\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"name\": \"approveDrip1\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"_percentage\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"name\": \"approveDrip2\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"approvedAddress1\",\n        \"outputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"approvedAddress2\",\n        \"outputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_stakeable\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_referredBy\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"buy\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_referredBy\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"buyFor\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"buyPrice\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_tokensToSell\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"calculateHexReceived\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_tronToSpend\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"calculateTokensReceived\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"custodianAddress\",\n        \"outputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"dailyRate\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint32\",\n            \"name\": \"\",\n            \"type\": \"uint32\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"distribute\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"distributePool\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"distributionAddress\",\n        \"outputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"dividendPool\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_customerAddress\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"dividendsOf\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_customerAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_dayEstimate\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"estimateDividendsOf\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"bytes32\",\n            \"name\": \"exchange\",\n            \"type\": \"bytes32\"\n          }\n        ],\n        \"name\": \"hexToSendFund\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"lastDripTime\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"lockedTokenBalanceLedger\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_includeReferralBonus\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"myDividends\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_includeReferralBonus\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_dayEstimate\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"myEstimateDividends\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_stakeable\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"myTokens\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"\",\n            \"type\": \"string\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"bytes32\",\n            \"name\": \"exchange\",\n            \"type\": \"bytes32\"\n          }\n        ],\n        \"name\": \"payFund\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"percentage1\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"percentage2\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"playerStats\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"deposits\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"withdrawals\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"staked\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"activeStakes\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"referralRequirement\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"roll\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_amountOfTokens\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"sell\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"sellPrice\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"setDistributionAddress\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"setDripPercentage\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_feedActivated\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"setFeeding\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_stakeActivated\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"name\": \"setHexStaking\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"_name\",\n            \"type\": \"string\"\n          }\n        ],\n        \"name\": \"setName\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"_symbol\",\n            \"type\": \"string\"\n          }\n        ],\n        \"name\": \"setSymbol\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_proposedAddress\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"setUniswapAddress\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_stakeIndex\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint40\",\n            \"name\": \"_stakeIdParam\",\n            \"type\": \"uint40\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_uniqueID\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"stakeEnd\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"stakeLists\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint40\",\n            \"name\": \"stakeID\",\n            \"type\": \"uint40\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"hexAmount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint72\",\n            \"name\": \"stakeShares\",\n            \"type\": \"uint72\"\n          },\n          {\n            \"internalType\": \"uint16\",\n            \"name\": \"lockedDay\",\n            \"type\": \"uint16\"\n          },\n          {\n            \"internalType\": \"uint16\",\n            \"name\": \"stakedDays\",\n            \"type\": \"uint16\"\n          },\n          {\n            \"internalType\": \"uint16\",\n            \"name\": \"unlockedDay\",\n            \"type\": \"uint16\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"started\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"ended\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_days\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"stakeStart\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"\",\n            \"type\": \"string\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalDonation\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalHexBalance\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalMaxFundCollected\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalMaxFundReceived\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalPlayer\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalStableFundCollected\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalStableFundReceived\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalStakeBalance\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_toAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_amountOfTokens\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"uniswapAddress\",\n        \"outputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"withdraw\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      }\n    ]\n\n}\n\n","const HEX = require('./hex_contract')\nconst { BigNumber } = require('bignumber.js')\nconst { format } = require('d3-format')\n/*\n * displays unitized .3 U formatted values (eg. 12.345 M) with 50% opacity for fractional part\n */\nconst calcBigPayDaySlice = (shares, sharePool, _globals) => {\n    const unclaimedSatoshis = Object.entries(_globals).length \n            ? _globals.claimStats.unclaimedSatoshisTotal\n            : new BigNumber('fae0c6a6400dadc0', 16) // total claimable Satoshis (pre BPD)\n    return new BigNumber(unclaimedSatoshis.times(HEX.HEARTS_PER_SATOSHI).times(shares))\n                                    .idiv(sharePool)\n}\n\nconst calcAdoptionBonus = (payout, _globals) => {\n    const { claimedSatoshisTotal, claimedBtcAddrCount } = _globals.claimStats\n    const viral = payout.times(claimedBtcAddrCount).idiv(HEX.CLAIMABLE_BTC_ADDR_COUNT) // .sol line: 1214\n    const criticalMass = payout.times(claimedSatoshisTotal).idiv(HEX.CLAIMABLE_SATOSHIS_TOTAL) // .sol line: 1221\n    const bonus = viral.plus(criticalMass)\n    return bonus\n}\n\nconst cryptoFormat = (v, currency) => {\n    if (typeof currency === 'undefined') currency = 'HEX'\n    if (typeof v === 'string' || typeof v === 'number') v = BigNumber(v)\n    if (!v.isFinite()) currency='INVALID' // trigger switch default\n\n    let unit = 'HEX'\n    let s\n    switch (currency) {\n        case 'ETH':\n            unit = 'ETH'\n            if (v.isZero())         s = '0.000'\n            else if (v.lt( 1e3))    { unit = 'Wei'; s = format(',')(v.toFixed(3, 1)) }\n            else if (v.lt( 1e6))    { unit = 'Wei'; s = format(',.0f')(v.toFixed(0, 1)) }\n            else if (v.lt( 1e9))    { unit = 'Wei'; s = format(',.3f')(v.div( 1e06).toFixed(3, 1))+'M' }\n            else if (v.lt(1e12))    { unit = 'Wei'; s = format(',.3f')(v.div( 1e09).toFixed(3, 1))+'G' }\n            else if (v.lt(1e15))    { unit = 'Wei'; s = format(',.0f')(v.div( 1e09).toFixed(0, 1))+'G' } // RH uses nnn.nnnT. We prefer GWei over TWei\n            else if (v.lt(1e24))    s = format(',')(v.div( 1e18).toFixed(8, 1)).slice(0, 8)\n            else if (v.lt(1e27))    s = format(',')(v.div( 1e24).toFixed(8, 1)).slice(0, 7)+'M'\n            else if (v.lt(1e30))    s = format(',')(v.div( 1e27).toFixed(8, 1)).slice(0, 7)+'B'\n            else if (v.lt(1e33))    s = format(',')(v.div( 1e30).toFixed(8, 1)).slice(0, 7)+'T'\n            else if (v.lt(1e36))    s = format(',')(v.div( 1e33).toFixed(8, 1)).slice(0, 7)+'Q'\n            else                    s = format(',')(v.div( 1e33).toFixed(0, 1))+'Q' // [nnn,...,]nnn,nnn Q\n            s = s.replace(/(^[-,0-9]+)[.0]+(M|B|T)?$/, \"$1$2\") // nn.000 => nn\n            s = s.replace(/(^\\d+\\.\\d{3})0+$/, \"$1\") // nn.123000 => nn.123\n            break\n        case 'TSHARE_PRICE':\n            unit = 'HEX / T-Share'\n            if (v.isZero())         s = '0.000'\n            else if (v.lt( 1e6))    s = format(',.0f')(v)\n            else if (v.lt( 1e9))    s = format(',.3f')(v.div(1e6).toFixed(3, 1))+'M'\n            else if (v.lt(1e12))    s = format(',.3f')(v.div(1e9).toFixed(3, 1))+'B'\n            else if (v.lt(1e15))    s = format(',.3f')(v.div(1e12).toFixed(3, 1))+'T'\n            else                    s = format(',.0f')(v.div(1e12).toFixed(0))+'T'\n            break\n        case 'SHARES':\n            unit = 'Shares'\n            if (v.isZero())         s = '0.000'\n            else if (v.lt(1e03))    s = format(',.3f')(v.div(1e03).toFixed(3, 1))\n            else if (v.lt(1e06))    s = format(',.3f')(v.div(1e03).toFixed(3, 1))+'K'\n            else if (v.lt(1e09))    s = format(',.3f')(v.div(1e06).toFixed(3, 1))+'M'\n            else if (v.lt(1e12))    s = format(',.3f')(v.div(1e09).toFixed(3, 1))+'B'\n            else if (v.lt(1e15))    s = format(',.3f')(v.div(1e12).toFixed(3, 1))+'T'\n            else                    s = format(',.0f')(v.div(1e12).toFixed(0))+'T'\n            break\n        case 'PERCENT': // where 1.0 = 1%\n            unit = '%'\n            v = BigNumber(v)\n            if (v.isZero())         s = '0.000'\n            else if (v.lt( 1e3))    s = format(',.3f')(v.toFixed(3, 1))\n            else                    s = format(',.0f')(v.toFixed(0, 1))\n            break\n        case 'HEX': \n            if (v.isZero())         s = '0.000'\n            else if (v.lt(1e6))     { unit = 'Hearts'; s = format(',.6f')(v.toPrecision(6, 1)) }\n            else if (v.lt(1e08))    s = format(',.4f')(v.div(1E08).toPrecision(4, 1)) // <         1 HEX\n            else if (v.lt(1e09))    s = format(',.4f')(v.div(1E08).toPrecision(5, 1)) // <        10 HEX\n            else if (v.lt(1e10))    s = format(',.4f')(v.div(1E08).toPrecision(6, 1)) // <       100 HEX\n            else if (v.lt(1e11))    s = format(',.3f')(v.div(1E08).toPrecision(6, 1)) // <     1,000 HEX\n            else if (v.lt(1e12))    s = format(',.2f')(v.div(1E08).toPrecision(6, 1)) // <    10,000 HEX\n            else if (v.lt(1e13))    s = format(',.1f')(v.div(1E08).toPrecision(6, 1)) // <   100,000 HEX\n            else if (v.lt(1e14))    s = format(',.1f')(v.div(1E08).toPrecision(6, 1)) // < 1,000,000 HEX\n            else if (v.lt(1e15))    s = format(',.4f')(v.div(1E14).toPrecision(5, 1))+'M'\n            else if (v.lt(1e16))    s = format(',.4f')(v.div(1E14).toPrecision(6, 1))+'M'\n            else if (v.lt(1e17))    s = format(',.3f')(v.div(1E14).toPrecision(6, 1))+'M'\n            else if (v.lt(1e18))    s = format(',.4f')(v.div(1E17).toPrecision(5, 1))+'B'\n            else if (v.lt(1e19))    s = format(',.4f')(v.div(1E17).toPrecision(6, 1))+'B'\n            else if (v.lt(1e20))    s = format(',.3f')(v.div(1E17).toPrecision(6, 1))+'B'\n            else if (v.lt(1e21))    s = format(',.4f')(v.div(1E20).toPrecision(5, 1))+'T'\n            else if (v.lt(1e22))    s = format(',.4f')(v.div(1E20).toPrecision(6, 1))+'T'\n            else if (v.lt(1e23))    s = format(',.3f')(v.div(1E20).toPrecision(6, 1))+'T'\n            else                    s = format(',')(v.div(1E20))+'T'\n            s = s.replace(/(^[-,0-9]+)[.0]+(M|B|T)?$/, \"$1$2\") // nn.000 => nn\n            break\n\n        case \"USD\":\n            unit = 'USD'\n            if (v.isZero())   s = '0.00'\n            else s = format(',.2f')(v)\n            break;\n        default: // NaN or Infinity\n            unit = ''\n            s = v.toString()\n    }\n    return {\n        valueString: s,\n        unit,\n        valueWithUnit: s + (unit === '' ? '' : ' '+unit)\n    }\n}\n\nconst detectTrustWallet = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) return false\n    return (window.web3 && window.web3.currentProvider && window.web3.currentProvider.isTrust)\n}\n\nconst fetchWithTimeout  = (url, params, timeout) => {\n    return new Promise( (resolve, reject) => {\n        // Set timeout timer\n        const timer = setTimeout( () => reject(new Error('Request timed out') ), timeout);\n        fetch( url, params ).then(\n            response => resolve( response ),\n            err => reject( err )\n        ).finally( () => clearTimeout(timer) );\n    })\n}\n\nmodule.exports = {\n    calcBigPayDaySlice,\n    calcAdoptionBonus,\n    cryptoFormat,\n    detectTrustWallet,\n    fetchWithTimeout,\n}\n"],"sourceRoot":""}